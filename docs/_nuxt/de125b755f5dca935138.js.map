{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/src/components/form/form.js","webpack:///./node_modules/bootstrap-vue/src/components/form-checkbox/form-checkbox.js","webpack:///./node_modules/bootstrap-vue/src/components/image/img-lazy.js","webpack:///./node_modules/bootstrap-vue/src/components/dropdown/dropdown.js","webpack:///./node_modules/bootstrap-vue/src/components/form/form-invalid-feedback.js","webpack:///./node_modules/bootstrap-vue/src/components/form-radio/form-radio.js","webpack:///./node_modules/bootstrap-vue/src/components/image/img.js","webpack:///./node_modules/bootstrap-vue/src/components/form/form-text.js","webpack:///./node_modules/bootstrap-vue/src/components/form/form-valid-feedback.js","webpack:///./node_modules/bootstrap-vue/src/components/dropdown/dropdown-item.js","webpack:///./node_modules/bootstrap-vue/src/components/dropdown/dropdown-item-button.js","webpack:///./node_modules/bootstrap-vue/src/components/dropdown/dropdown-header.js","webpack:///./node_modules/bootstrap-vue/src/components/dropdown/dropdown-divider.js","webpack:///./node_modules/bootstrap-vue/src/components/dropdown/dropdown-form.js","webpack:///./node_modules/bootstrap-vue/src/components/dropdown/dropdown-text.js","webpack:///./node_modules/bootstrap-vue/src/components/dropdown/dropdown-group.js","webpack:///./node_modules/bootstrap-vue/src/components/dropdown/index.js","webpack:///./node_modules/bootstrap-vue/src/components/collapse/collapse.js","webpack:///./node_modules/bootstrap-vue/src/components/collapse/index.js","webpack:///./node_modules/bootstrap-vue/src/components/image/index.js","webpack:///./node_modules/bootstrap-vue/src/components/input-group/input-group-text.js","webpack:///./node_modules/bootstrap-vue/src/components/input-group/input-group-addon.js","webpack:///./node_modules/bootstrap-vue/src/components/input-group/input-group-prepend.js","webpack:///./node_modules/bootstrap-vue/src/components/input-group/input-group-append.js","webpack:///./node_modules/bootstrap-vue/src/components/input-group/input-group.js","webpack:///./node_modules/bootstrap-vue/src/components/input-group/index.js","webpack:///./node_modules/bootstrap-vue/src/components/form-select/helpers/mixin-options.js","webpack:///./node_modules/bootstrap-vue/src/components/form-select/form-select-option.js","webpack:///./node_modules/bootstrap-vue/src/components/form-select/form-select-option-group.js","webpack:///./node_modules/bootstrap-vue/src/components/form-select/form-select.js","webpack:///./node_modules/bootstrap-vue/src/components/form-select/index.js","webpack:///./node_modules/bootstrap-vue/src/components/embed/embed.js","webpack:///./node_modules/bootstrap-vue/src/components/embed/index.js","webpack:///./node_modules/bootstrap-vue/src/components/form/form-datalist.js","webpack:///./node_modules/bootstrap-vue/src/components/form/index.js","webpack:///./node_modules/bootstrap-vue/src/components/form-checkbox/form-checkbox-group.js","webpack:///./node_modules/bootstrap-vue/src/components/form-checkbox/index.js","webpack:///./node_modules/bootstrap-vue/src/components/form-file/form-file.js","webpack:///./node_modules/bootstrap-vue/src/components/form-file/index.js","webpack:///./node_modules/bootstrap-vue/src/components/form-group/form-group.js","webpack:///./node_modules/bootstrap-vue/src/components/form-group/index.js","webpack:///./node_modules/bootstrap-vue/src/components/form-input/form-input.js","webpack:///./node_modules/bootstrap-vue/src/components/form-input/index.js","webpack:///./node_modules/bootstrap-vue/src/components/form-radio/form-radio-group.js","webpack:///./node_modules/bootstrap-vue/src/components/form-radio/index.js","webpack:///./node_modules/bootstrap-vue/src/components/form-textarea/form-textarea.js","webpack:///./node_modules/bootstrap-vue/src/components/form-textarea/index.js"],"names":["props","id","type","String","default","inline","Boolean","novalidate","validated","BForm","Vue","extend","name","functional","render","h","data","children","mergeData","class","attrs","BFormCheckbox","mixins","formRadioCheckMixin","idMixin","formMixin","formSizeMixin","formStateMixin","inject","bvGroup","from","value","uncheckedValue","indeterminate","switch","checked","computed","isChecked","this","computedLocalChecked","isArray","looseIndexOf","looseEqual","isRadio","isCheck","watch","newVal","$emit","$refs","input","setIndeterminate","mounted","methods","handleChange","target","localChecked","isArr","idx","concat","slice","isGroup","state","src","required","srcset","Array","sizes","alt","width","Number","height","blankSrc","blankColor","getComponentConfig","blankWidth","blankHeight","show","fluid","fluidGrow","block","thumbnail","rounded","left","right","center","offset","BImgLazy","directives","bVisible","VBVisible","isShown","computedSrc","computedBlank","computedWidth","computedHeight","computedSrcset","filter","identity","join","computedSizes","oldVal","visible","hasIntersectionObserverSupport","$nextTick","updateShowProp","doShow","push","modifiers","toInteger","BImg","blank","NAME","text","html","size","variant","menuClass","Object","toggleTag","toggleText","toggleClass","noCaret","split","splitHref","splitTo","splitVariant","splitClass","splitButtonType","validator","arrayIncludes","lazy","role","BDropdown","dropdownMixin","normalizeSlotMixin","dropdownClasses","directionClass","boundary","menuClasses","toggleClasses","buttonContent","normalizeSlot","stripTags","btnProps","disabled","to","href","BButton","ref","safeId","on","click","onSplitClick","toggle","staticClass","tag","mousedown","onMousedown","keydown","menu","tabindex","onKeydown","hide","tooltip","forceShow","ariaLive","BFormInvalidFeedback","BFormRadio","BLANK_TEMPLATE","align","color","encodeURIComponent","replace","toString","makeBlankImgSrc","isString","textVariant","BFormText","BFormValidFeedback","linkPropsFactory","BDropdownItem","inheritAttrs","bvDropdown","linkClass","closeDropdown","requestAF","onClick","evt","BLink","$props","active","$attrs","activeClass","buttonClass","BDropdownItemButton","BDropdownHeader","BDropdownDivider","BDropdownForm","formProps","formClass","$listeners","BDropdownText","header","headerTag","headerVariant","headerClasses","ariaDescribedby","BDropdownGroup","slots","scopedSlots","$slots","$scopedSlots","headerId","hasNormalizedSlot","adb","ariaDescribedBy","trim","DropdownPlugin","pluginFactory","components","BDd","BDdItem","BDropdownItemBtn","BDdItemButton","BDdItemBtn","BDdHeader","BDdDivider","BDdForm","BDdText","BDdGroup","BCollapse","listenOnRootMixin","model","prop","event","isNav","accordion","appear","transitioning","classObject","collapse","emitState","created","listenOnRoot","EVENT_TOGGLE","handleToggleEvt","handleAccordionEvt","setWindowEvents","handleResize","EVENT_STATE_REQUEST","emitSync","updated","deactivated","activated","beforeDestroy","isBrowser","eventOnOff","window","EVENT_OPTIONS_NO_CAPTURE","onEnter","onAfterEnter","onLeave","onAfterLeave","$root","EVENT_STATE","EVENT_STATE_SYNC","checkDisplayBlock","restore","hasClass","$el","removeClass","isBlock","getCS","display","addClass","clickHandler","el","matches","closest","openedId","scope","close","content","BVCollapse","enter","afterEnter","leave","afterLeave","CollapsePlugin","VBToggle","ImagePlugin","BInputGroupText","commonProps","isText","BInputGroupAddon","append","BInputGroupPrepend","BInputGroupAppend","prepend","prependHtml","appendHtml","BInputGroup","childNodes","domProps","htmlOrText","InputGroupPlugin","formOptionsMixin","labelField","optionsField","normalizeOption","option","key","isPlainObject","get","valueField","textField","options","label","isUndefined","htmlField","disabledField","BFormSelectOption","BFormSelectOptionGroup","formOptions","map","index","BFormSelect","formCustomMixin","optionsMixin","multiple","selectSize","ariaInvalid","localValue","computedSelectSize","plain","inputClass","stateClass","computedAriaInvalid","focus","blur","rawName","expression","form","change","selectedVal","arrayFrom","o","selected","_value","FormSelectPlugin","BSelect","BSelectOption","BSelectOptionGroup","str","aspect","BEmbed","EmbedPlugin","BFormDatalist","FormPlugin","BDatalist","BFormFeedback","BFormRow","switches","BFormCheckboxGroup","formRadioCheckGroupMixin","provide","bvCheckGroup","isRadioGroup","FormCheckboxPlugin","BCheckbox","BCheck","BCheckboxGroup","BCheckGroup","BFormFile","File","warn","isUndefinedOrNull","isValidValue","isFile","every","v","accept","capture","placeholder","browseText","dropPlaceholder","directory","noTraverse","noDrop","fileNameFormatter","Function","selectedFile","dragging","hasFocus","selectLabel","length","files","names","f","isFunction","file","i","reset","focusHandler","$input","e","onFileChange","items","dataTransfer","setFiles","queue","item","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","filesArray","onReset","onDragover","preventDefault","stopPropagation","custom","dropEffect","onDragleave","onDrop","path","resolve","$path","isDirectory","createReader","readEntries","entries","webkitdirectory","focusin","focusout","for","dragover","dragleave","drop","FormFilePlugin","BFile","renderInvalidFeedback","ctx","invalidFeedback","invalidFeedbackId","computedState","feedbackAriaLive","renderValidFeedback","validFeedback","validFeedbackId","renderHelpText","description","descriptionId","makePropName","memoize","breakpoint","prefix","upperFirst","BFormGroup","BREAKPOINTS","getBreakpointsUpCached","bpLabelColProps","reduce","create","bpLabelAlignProps","labelFor","labelSize","labelSrOnly","labelClass","labelColProps","forEach","propVal","isBoolean","parseInt","bColPropName","labelAlignClasses","classes","className","isHorizontal","keys","labelId","hasInvalidFeedback","hasValidFeedback","describedByIds","add","remove","setInputDescribedBy","legendClick","tagName","test","inputs","selectAll","isVisible","select","ids","getAttr","memo","setAttr","removeAttr","isFieldset","isLegend","labelTag","BCol","renderLabel","FormGroupPlugin","BFormFieldset","TYPES","BFormInput","formTextMixin","formSelectionMixin","formValidityMixin","noWheel","min","max","step","list","localType","setWheelStopper","onWheelFocus","onWheelBlur","eventOff","document","stopWheel","eventOn","computedClass","autocomplete","readonly","plaintext","onInput","onChange","onBlur","FormInputPlugin","BInput","BFormRadioGroup","bvRadioGroup","FormRadioPlugin","BRadio","BRadioGroup","BFormTextarea","rows","maxRows","wrap","noResize","noAutoShrink","heightInPx","computedStyle","styles","resize","computedRows","overflowY","computedMinRows","Math","computedMaxRows","setHeight","visibleCallback","computeHeight","$isServer","isNull","lineHeight","parseFloat","border","borderTopWidth","borderBottomWidth","padding","paddingTop","paddingBottom","minHeight","oldHeight","style","scrollHeight","contentRows","ceil","FormTextareaPlugin","BTextarea"],"mappings":"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","file":"de125b755f5dca935138.js","sourcesContent":["import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\n\nexport const props = {\n  id: {\n    type: String,\n    default: null\n  },\n  inline: {\n    type: Boolean,\n    default: false\n  },\n  novalidate: {\n    type: Boolean,\n    default: false\n  },\n  validated: {\n    type: Boolean,\n    default: false\n  }\n}\n\n// @vue/component\nexport const BForm = /*#__PURE__*/ Vue.extend({\n  name: 'BForm',\n  functional: true,\n  props,\n  render(h, { props, data, children }) {\n    return h(\n      'form',\n      mergeData(data, {\n        class: {\n          'form-inline': props.inline,\n          'was-validated': props.validated\n        },\n        attrs: {\n          id: props.id,\n          novalidate: props.novalidate\n        }\n      }),\n      children\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport looseEqual from '../../utils/loose-equal'\nimport looseIndexOf from '../../utils/loose-index-of'\nimport { isArray } from '../../utils/inspect'\nimport formMixin from '../../mixins/form'\nimport formRadioCheckMixin from '../../mixins/form-radio-check'\nimport formSizeMixin from '../../mixins/form-size'\nimport formStateMixin from '../../mixins/form-state'\nimport idMixin from '../../mixins/id'\n\n// @vue/component\nexport const BFormCheckbox = /*#__PURE__*/ Vue.extend({\n  name: 'BFormCheckbox',\n  mixins: [\n    formRadioCheckMixin, // Includes shared render function\n    idMixin,\n    formMixin,\n    formSizeMixin,\n    formStateMixin\n  ],\n  inject: {\n    bvGroup: {\n      from: 'bvCheckGroup',\n      default: false\n    }\n  },\n  props: {\n    value: {\n      // type: [String, Number, Boolean, Object],\n      default: true\n    },\n    uncheckedValue: {\n      // type: [String, Number, Boolean, Object],\n      // Not applicable in multi-check mode\n      default: false\n    },\n    indeterminate: {\n      // Not applicable in multi-check mode\n      type: Boolean,\n      default: false\n    },\n    switch: {\n      // Custom switch styling\n      type: Boolean,\n      default: false\n    },\n    checked: {\n      // v-model (Array when multiple checkboxes have same name)\n      // type: [String, Number, Boolean, Object, Array],\n      default: null\n    }\n  },\n  computed: {\n    isChecked() {\n      const checked = this.computedLocalChecked\n      const value = this.value\n      if (isArray(checked)) {\n        return looseIndexOf(checked, value) > -1\n      } else {\n        return looseEqual(checked, value)\n      }\n    },\n    isRadio() {\n      return false\n    },\n    isCheck() {\n      return true\n    }\n  },\n  watch: {\n    computedLocalChecked(newVal) {\n      this.$emit('input', newVal)\n      if (this.$refs && this.$refs.input) {\n        this.$emit('update:indeterminate', this.$refs.input.indeterminate)\n      }\n    },\n    indeterminate(newVal) {\n      this.setIndeterminate(newVal)\n    }\n  },\n  mounted() {\n    // Set initial indeterminate state\n    this.setIndeterminate(this.indeterminate)\n  },\n  methods: {\n    handleChange({ target: { checked, indeterminate } }) {\n      let localChecked = this.computedLocalChecked\n      const value = this.value\n      const isArr = isArray(localChecked)\n      const uncheckedValue = isArr ? null : this.uncheckedValue\n      // Update computedLocalChecked\n      if (isArr) {\n        const idx = looseIndexOf(localChecked, value)\n        if (checked && idx < 0) {\n          // Add value to array\n          localChecked = localChecked.concat(value)\n        } else if (!checked && idx > -1) {\n          // Remove value from array\n          localChecked = localChecked.slice(0, idx).concat(localChecked.slice(idx + 1))\n        }\n      } else {\n        localChecked = checked ? value : uncheckedValue\n      }\n      this.computedLocalChecked = localChecked\n      // Change is only emitted on user interaction\n      this.$emit('change', checked ? value : uncheckedValue)\n      // If this is a child of form-checkbox-group, we emit a change event on it as well\n      if (this.isGroup) {\n        this.bvGroup.$emit('change', localChecked)\n      }\n      this.$emit('update:indeterminate', indeterminate)\n    },\n    setIndeterminate(state) {\n      // Indeterminate only supported in single checkbox mode\n      if (isArray(this.computedLocalChecked)) {\n        state = false\n      }\n      if (this.$refs && this.$refs.input) {\n        this.$refs.input.indeterminate = state\n        // Emit update event to prop\n        this.$emit('update:indeterminate', state)\n      }\n    }\n  }\n})\n","import Vue from '../../utils/vue'\nimport identity from '../../utils/identity'\nimport { concat } from '../../utils/array'\nimport { getComponentConfig } from '../../utils/config'\nimport { hasIntersectionObserverSupport } from '../../utils/env'\nimport { toInteger } from '../../utils/number'\nimport { VBVisible } from '../../directives/visible/visible'\nimport { BImg } from './img'\n\nconst NAME = 'BImgLazy'\n\nexport const props = {\n  src: {\n    type: String,\n    default: null,\n    required: true\n  },\n  srcset: {\n    type: [String, Array],\n    default: null\n  },\n  sizes: {\n    type: [String, Array],\n    default: null\n  },\n  alt: {\n    type: String,\n    default: null\n  },\n  width: {\n    type: [Number, String],\n    default: null\n  },\n  height: {\n    type: [Number, String],\n    default: null\n  },\n  blankSrc: {\n    // If null, a blank image is generated\n    type: String,\n    default: null\n  },\n  blankColor: {\n    type: String,\n    default: () => getComponentConfig(NAME, 'blankColor')\n  },\n  blankWidth: {\n    type: [Number, String],\n    default: null\n  },\n  blankHeight: {\n    type: [Number, String],\n    default: null\n  },\n  show: {\n    type: Boolean,\n    default: false\n  },\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  fluidGrow: {\n    type: Boolean,\n    default: false\n  },\n  block: {\n    type: Boolean,\n    default: false\n  },\n  thumbnail: {\n    type: Boolean,\n    default: false\n  },\n  rounded: {\n    type: [Boolean, String],\n    default: false\n  },\n  left: {\n    type: Boolean,\n    default: false\n  },\n  right: {\n    type: Boolean,\n    default: false\n  },\n  center: {\n    type: Boolean,\n    default: false\n  },\n  offset: {\n    // Distance away from viewport (in pixels) before being\n    // considered \"visible\"\n    type: [Number, String],\n    default: 360\n  }\n}\n\n// @vue/component\nexport const BImgLazy = /*#__PURE__*/ Vue.extend({\n  name: NAME,\n  directives: {\n    bVisible: VBVisible\n  },\n  props,\n  data() {\n    return {\n      isShown: this.show\n    }\n  },\n  computed: {\n    computedSrc() {\n      return !this.blankSrc || this.isShown ? this.src : this.blankSrc\n    },\n    computedBlank() {\n      return !(this.isShown || this.blankSrc)\n    },\n    computedWidth() {\n      return this.isShown ? this.width : this.blankWidth || this.width\n    },\n    computedHeight() {\n      return this.isShown ? this.height : this.blankHeight || this.height\n    },\n    computedSrcset() {\n      const srcset = concat(this.srcset)\n        .filter(identity)\n        .join(',')\n      return !this.blankSrc || this.isShown ? srcset : null\n    },\n    computedSizes() {\n      const sizes = concat(this.sizes)\n        .filter(identity)\n        .join(',')\n      return !this.blankSrc || this.isShown ? sizes : null\n    }\n  },\n  watch: {\n    show(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        // If IntersectionObserver support is not available, image is always shown\n        const visible = hasIntersectionObserverSupport ? newVal : true\n        this.isShown = visible\n        if (visible !== newVal) {\n          // Ensure the show prop is synced (when no IntersectionObserver)\n          this.$nextTick(this.updateShowProp)\n        }\n      }\n    },\n    isShown(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        // Update synched show prop\n        this.updateShowProp()\n      }\n    }\n  },\n  mounted() {\n    // If IntersectionObserver is not available, image is always shown\n    this.isShown = hasIntersectionObserverSupport ? this.show : true\n  },\n  methods: {\n    updateShowProp() {\n      this.$emit('update:show', this.isShown)\n    },\n    doShow(visible) {\n      // If IntersectionObserver is not supported, the callback\n      // will be called with `null` rather than `true` or `false`\n      if ((visible || visible === null) && !this.isShown) {\n        this.isShown = true\n      }\n    }\n  },\n  render(h) {\n    const directives = []\n    if (!this.isShown) {\n      // We only add the visible directive if we are not shown\n      directives.push({\n        // Visible directive will silently do nothing if\n        // IntersectionObserver is not supported\n        name: 'b-visible',\n        // Value expects a callback (passed one arg of `visible` = `true` or `false`)\n        value: this.doShow,\n        modifiers: {\n          // Root margin from viewport\n          [`${toInteger(this.offset) || 0}`]: true,\n          // Once the image is shown, stop observing\n          once: true\n        }\n      })\n    }\n\n    return h(BImg, {\n      directives,\n      props: {\n        // Computed value props\n        src: this.computedSrc,\n        blank: this.computedBlank,\n        width: this.computedWidth,\n        height: this.computedHeight,\n        srcset: this.computedSrcset || null,\n        sizes: this.computedSizes || null,\n        // Passthrough props\n        alt: this.alt,\n        blankColor: this.blankColor,\n        fluid: this.fluid,\n        fluidGrow: this.fluidGrow,\n        block: this.block,\n        thumbnail: this.thumbnail,\n        rounded: this.rounded,\n        left: this.left,\n        right: this.right,\n        center: this.center\n      }\n    })\n  }\n})\n","import Vue from '../../utils/vue'\nimport { arrayIncludes } from '../../utils/array'\nimport { stripTags } from '../../utils/html'\nimport { getComponentConfig } from '../../utils/config'\nimport idMixin from '../../mixins/id'\nimport dropdownMixin from '../../mixins/dropdown'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\nimport { BButton } from '../button/button'\n\nconst NAME = 'BDropdown'\n\nexport const props = {\n  text: {\n    // Button label\n    type: String,\n    default: ''\n  },\n  html: {\n    // Button label\n    type: String\n  },\n  size: {\n    type: String,\n    default: () => getComponentConfig(NAME, 'size')\n  },\n  variant: {\n    type: String,\n    default: () => getComponentConfig(NAME, 'variant')\n  },\n  block: {\n    type: Boolean,\n    default: false\n  },\n  menuClass: {\n    type: [String, Array, Object],\n    default: null\n  },\n  toggleTag: {\n    type: String,\n    default: 'button'\n  },\n  toggleText: {\n    // This really should be toggleLabel\n    type: String,\n    default: () => getComponentConfig(NAME, 'toggleText')\n  },\n  toggleClass: {\n    type: [String, Array, Object],\n    default: null\n  },\n  noCaret: {\n    type: Boolean,\n    default: false\n  },\n  split: {\n    type: Boolean,\n    default: false\n  },\n  splitHref: {\n    type: String\n    // default: undefined\n  },\n  splitTo: {\n    type: [String, Object]\n    // default: undefined\n  },\n  splitVariant: {\n    type: String,\n    default: () => getComponentConfig(NAME, 'splitVariant')\n  },\n  splitClass: {\n    type: [String, Array, Object],\n    default: null\n  },\n  splitButtonType: {\n    type: String,\n    default: 'button',\n    validator: value => arrayIncludes(['button', 'submit', 'reset'], value)\n  },\n  lazy: {\n    // If true, only render menu contents when open\n    type: Boolean,\n    default: false\n  },\n  role: {\n    type: String,\n    default: 'menu'\n  }\n}\n\n// @vue/component\nexport const BDropdown = /*#__PURE__*/ Vue.extend({\n  name: NAME,\n  mixins: [idMixin, dropdownMixin, normalizeSlotMixin],\n  props,\n  computed: {\n    dropdownClasses() {\n      return [\n        this.directionClass,\n        {\n          show: this.visible,\n          // The 'btn-group' class is required in `split` mode for button alignment\n          // It needs also to be applied when `block` is disabled to allow multiple\n          // dropdowns to be aligned one line\n          'btn-group': this.split || !this.block,\n          // When `block` is enabled and we are in `split` mode the 'd-flex' class\n          // needs to be applied to allow the buttons to stretch to full width\n          'd-flex': this.block && this.split,\n          // Position `static` is needed to allow menu to \"breakout\" of the `scrollParent`\n          // boundaries when boundary is anything other than `scrollParent`\n          // See: https://github.com/twbs/bootstrap/issues/24251#issuecomment-341413786\n          'position-static': this.boundary !== 'scrollParent' || !this.boundary\n        }\n      ]\n    },\n    menuClasses() {\n      return [\n        this.menuClass,\n        {\n          'dropdown-menu-right': this.right,\n          show: this.visible\n        }\n      ]\n    },\n    toggleClasses() {\n      return [\n        this.toggleClass,\n        {\n          'dropdown-toggle-split': this.split,\n          'dropdown-toggle-no-caret': this.noCaret && !this.split\n        }\n      ]\n    }\n  },\n  render(h) {\n    let split = h()\n    const buttonContent = this.normalizeSlot('button-content') || this.html || stripTags(this.text)\n    if (this.split) {\n      const btnProps = {\n        variant: this.splitVariant || this.variant,\n        size: this.size,\n        block: this.block,\n        disabled: this.disabled\n      }\n      // We add these as needed due to router-link issues with defined property with undefined/null values\n      if (this.splitTo) {\n        btnProps.to = this.splitTo\n      } else if (this.splitHref) {\n        btnProps.href = this.splitHref\n      } else if (this.splitButtonType) {\n        btnProps.type = this.splitButtonType\n      }\n      split = h(\n        BButton,\n        {\n          ref: 'button',\n          props: btnProps,\n          class: this.splitClass,\n          attrs: {\n            id: this.safeId('_BV_button_')\n          },\n          on: {\n            click: this.onSplitClick\n          }\n        },\n        [buttonContent]\n      )\n    }\n    const toggle = h(\n      BButton,\n      {\n        ref: 'toggle',\n        staticClass: 'dropdown-toggle',\n        class: this.toggleClasses,\n        props: {\n          tag: this.toggleTag,\n          variant: this.variant,\n          size: this.size,\n          block: this.block && !this.split,\n          disabled: this.disabled\n        },\n        attrs: {\n          id: this.safeId('_BV_toggle_'),\n          'aria-haspopup': 'true',\n          'aria-expanded': this.visible ? 'true' : 'false'\n        },\n        on: {\n          mousedown: this.onMousedown,\n          click: this.toggle,\n          keydown: this.toggle // Handle ENTER, SPACE and DOWN\n        }\n      },\n      [this.split ? h('span', { class: ['sr-only'] }, [this.toggleText]) : buttonContent]\n    )\n    const menu = h(\n      'ul',\n      {\n        ref: 'menu',\n        staticClass: 'dropdown-menu',\n        class: this.menuClasses,\n        attrs: {\n          role: this.role,\n          tabindex: '-1',\n          'aria-labelledby': this.safeId(this.split ? '_BV_button_' : '_BV_toggle_')\n        },\n        on: {\n          keydown: this.onKeydown // Handle UP, DOWN and ESC\n        }\n      },\n      !this.lazy || this.visible ? this.normalizeSlot('default', { hide: this.hide }) : [h()]\n    )\n    return h(\n      'div',\n      {\n        staticClass: 'dropdown b-dropdown',\n        class: this.dropdownClasses,\n        attrs: { id: this.safeId() }\n      },\n      [split, toggle, menu]\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\n\nexport const props = {\n  id: {\n    type: String,\n    default: null\n  },\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  tooltip: {\n    type: Boolean,\n    default: false\n  },\n  forceShow: {\n    type: Boolean,\n    default: false\n  },\n  state: {\n    type: Boolean,\n    default: null\n  },\n  ariaLive: {\n    type: String,\n    default: null\n  },\n  role: {\n    type: String,\n    default: null\n  }\n}\n\n// @vue/component\nexport const BFormInvalidFeedback = /*#__PURE__*/ Vue.extend({\n  name: 'BFormInvalidFeedback',\n  functional: true,\n  props,\n  render(h, { props, data, children }) {\n    const show = props.forceShow === true || props.state === false\n    return h(\n      props.tag,\n      mergeData(data, {\n        class: {\n          'invalid-feedback': !props.tooltip,\n          'invalid-tooltip': props.tooltip,\n          'd-block': show\n        },\n        attrs: {\n          id: props.id,\n          role: props.role,\n          'aria-live': props.ariaLive,\n          'aria-atomic': props.ariaLive ? 'true' : null\n        }\n      }),\n      children\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport idMixin from '../../mixins/id'\nimport formMixin from '../../mixins/form'\nimport formStateMixin from '../../mixins/form-state'\nimport formSizeMixin from '../../mixins/form-size'\nimport formRadioCheckMixin from '../../mixins/form-radio-check'\nimport looseEqual from '../../utils/loose-equal'\n\n// @vue/component\nexport const BFormRadio = /*#__PURE__*/ Vue.extend({\n  name: 'BFormRadio',\n  mixins: [\n    idMixin,\n    formRadioCheckMixin, // Includes shared render function\n    formMixin,\n    formSizeMixin,\n    formStateMixin\n  ],\n  inject: {\n    bvGroup: {\n      from: 'bvRadioGroup',\n      default: false\n    }\n  },\n  props: {\n    checked: {\n      // v-model\n      // type: [String, Number, Boolean, Object],\n      default: null\n    }\n  },\n  computed: {\n    // Radio Groups can only have a single value, so determining if checked is simple\n    isChecked() {\n      return looseEqual(this.value, this.computedLocalChecked)\n    },\n    // Flags for form-radio-check mixin\n    isRadio() {\n      return true\n    },\n    isCheck() {\n      return false\n    }\n  },\n  watch: {\n    // Radio Groups can only have a single value, so our watchers are simple\n    computedLocalChecked() {\n      this.$emit('input', this.computedLocalChecked)\n    }\n  },\n  methods: {\n    handleChange({ target: { checked } }) {\n      const value = this.value\n      this.computedLocalChecked = value\n      // Change is only emitted on user interaction\n      this.$emit('change', checked ? value : null)\n      // If this is a child of form-radio-group, we emit a change event on it as well\n      if (this.isGroup) {\n        this.bvGroup.$emit('change', checked ? value : null)\n      }\n    }\n  }\n})\n","import Vue from '../../utils/vue'\nimport identity from '../../utils/identity'\nimport { concat } from '../../utils/array'\nimport { getComponentConfig } from '../../utils/config'\nimport { isString } from '../../utils/inspect'\nimport { toInteger } from '../../utils/number'\nimport { toString } from '../../utils/string'\nimport { mergeData } from 'vue-functional-data-merge'\n\n// --- Constants --\n\nconst NAME = 'BImg'\n\n// Blank image with fill template\nconst BLANK_TEMPLATE =\n  '<svg width=\"%{w}\" height=\"%{h}\" ' +\n  'xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'viewBox=\"0 0 %{w} %{h}\" preserveAspectRatio=\"none\">' +\n  '<rect width=\"100%\" height=\"100%\" style=\"fill:%{f};\"></rect>' +\n  '</svg>'\n\nexport const props = {\n  src: {\n    type: String,\n    default: null\n  },\n  srcset: {\n    type: [String, Array],\n    default: null\n  },\n  sizes: {\n    type: [String, Array],\n    default: null\n  },\n  alt: {\n    type: String,\n    default: null\n  },\n  width: {\n    type: [Number, String],\n    default: null\n  },\n  height: {\n    type: [Number, String],\n    default: null\n  },\n  block: {\n    type: Boolean,\n    default: false\n  },\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  fluidGrow: {\n    // Gives fluid images class `w-100` to make them grow to fit container\n    type: Boolean,\n    default: false\n  },\n  rounded: {\n    // rounded can be:\n    //   false: no rounding of corners\n    //   true: slightly rounded corners\n    //   'top': top corners rounded\n    //   'right': right corners rounded\n    //   'bottom': bottom corners rounded\n    //   'left': left corners rounded\n    //   'circle': circle/oval\n    //   '0': force rounding off\n    type: [Boolean, String],\n    default: false\n  },\n  thumbnail: {\n    type: Boolean,\n    default: false\n  },\n  left: {\n    type: Boolean,\n    default: false\n  },\n  right: {\n    type: Boolean,\n    default: false\n  },\n  center: {\n    type: Boolean,\n    default: false\n  },\n  blank: {\n    type: Boolean,\n    default: false\n  },\n  blankColor: {\n    type: String,\n    default: () => getComponentConfig(NAME, 'blankColor')\n  }\n}\n\n// --- Helper methods ---\n\nconst makeBlankImgSrc = (width, height, color) => {\n  const src = encodeURIComponent(\n    BLANK_TEMPLATE.replace('%{w}', toString(width))\n      .replace('%{h}', toString(height))\n      .replace('%{f}', color)\n  )\n  return `data:image/svg+xml;charset=UTF-8,${src}`\n}\n\n// @vue/component\nexport const BImg = /*#__PURE__*/ Vue.extend({\n  name: NAME,\n  functional: true,\n  props,\n  render(h, { props, data }) {\n    let src = props.src\n    let width = toInteger(props.width) || null\n    let height = toInteger(props.height) || null\n    let align = null\n    let block = props.block\n    let srcset = concat(props.srcset)\n      .filter(identity)\n      .join(',')\n    let sizes = concat(props.sizes)\n      .filter(identity)\n      .join(',')\n    if (props.blank) {\n      if (!height && width) {\n        height = width\n      } else if (!width && height) {\n        width = height\n      }\n      if (!width && !height) {\n        width = 1\n        height = 1\n      }\n      // Make a blank SVG image\n      src = makeBlankImgSrc(width, height, props.blankColor || 'transparent')\n      // Disable srcset and sizes\n      srcset = null\n      sizes = null\n    }\n    if (props.left) {\n      align = 'float-left'\n    } else if (props.right) {\n      align = 'float-right'\n    } else if (props.center) {\n      align = 'mx-auto'\n      block = true\n    }\n    return h(\n      'img',\n      mergeData(data, {\n        attrs: {\n          src: src,\n          alt: props.alt,\n          width: width ? toString(width) : null,\n          height: height ? toString(height) : null,\n          srcset: srcset || null,\n          sizes: sizes || null\n        },\n        class: {\n          'img-thumbnail': props.thumbnail,\n          'img-fluid': props.fluid || props.fluidGrow,\n          'w-100': props.fluidGrow,\n          rounded: props.rounded === '' || props.rounded === true,\n          [`rounded-${props.rounded}`]: isString(props.rounded) && props.rounded !== '',\n          [align]: align,\n          'd-block': block\n        }\n      })\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\nimport { getComponentConfig } from '../../utils/config'\n\nconst NAME = 'BFormText'\n\nexport const props = {\n  id: {\n    type: String,\n    default: null\n  },\n  tag: {\n    type: String,\n    default: 'small'\n  },\n  textVariant: {\n    type: String,\n    default: () => getComponentConfig(NAME, 'textVariant')\n  },\n  inline: {\n    type: Boolean,\n    default: false\n  }\n}\n\n// @vue/component\nexport const BFormText = /*#__PURE__*/ Vue.extend({\n  name: NAME,\n  functional: true,\n  props,\n  render(h, { props, data, children }) {\n    return h(\n      props.tag,\n      mergeData(data, {\n        class: {\n          'form-text': !props.inline,\n          [`text-${props.textVariant}`]: props.textVariant\n        },\n        attrs: {\n          id: props.id\n        }\n      }),\n      children\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\n\nexport const props = {\n  id: {\n    type: String,\n    default: null\n  },\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  tooltip: {\n    type: Boolean,\n    default: false\n  },\n  forceShow: {\n    type: Boolean,\n    default: false\n  },\n  state: {\n    type: Boolean,\n    default: null\n  },\n  ariaLive: {\n    type: String,\n    default: null\n  },\n  role: {\n    type: String,\n    default: null\n  }\n}\n\n// @vue/component\nexport const BFormValidFeedback = /*#__PURE__*/ Vue.extend({\n  name: 'BFormValidFeedback',\n  functional: true,\n  props,\n  render(h, { props, data, children }) {\n    const show = props.forceShow === true || props.state === true\n    return h(\n      props.tag,\n      mergeData(data, {\n        class: {\n          'valid-feedback': !props.tooltip,\n          'valid-tooltip': props.tooltip,\n          'd-block': show\n        },\n        attrs: {\n          id: props.id,\n          role: props.role,\n          'aria-live': props.ariaLive,\n          'aria-atomic': props.ariaLive ? 'true' : null\n        }\n      }),\n      children\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport { requestAF } from '../../utils/dom'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\nimport { BLink, propsFactory as linkPropsFactory } from '../link/link'\n\nexport const props = linkPropsFactory()\n\n// @vue/component\nexport const BDropdownItem = /*#__PURE__*/ Vue.extend({\n  name: 'BDropdownItem',\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  inject: {\n    bvDropdown: {\n      default: null\n    }\n  },\n  props: {\n    ...props,\n    linkClass: {\n      type: [String, Array, Object],\n      default: null\n    },\n    variant: {\n      type: String,\n      default: null\n    }\n  },\n  methods: {\n    closeDropdown() {\n      // Close on next animation frame to allow <b-link> time to process\n      requestAF(() => {\n        if (this.bvDropdown) {\n          this.bvDropdown.hide(true)\n        }\n      })\n    },\n    onClick(evt) {\n      this.$emit('click', evt)\n      this.closeDropdown()\n    }\n  },\n  render(h) {\n    return h('li', { attrs: { role: 'presentation' } }, [\n      h(\n        BLink,\n        {\n          props: this.$props,\n          staticClass: 'dropdown-item',\n          class: [\n            this.linkClass,\n            {\n              [`text-${this.variant}`]: this.variant && !(this.active || this.disabled)\n            }\n          ],\n          attrs: { ...this.$attrs, role: 'menuitem' },\n          on: { click: this.onClick },\n          ref: 'item'\n        },\n        this.normalizeSlot('default')\n      )\n    ])\n  }\n})\n","import Vue from '../../utils/vue'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n\nexport const props = {\n  active: {\n    type: Boolean,\n    default: false\n  },\n  activeClass: {\n    type: String,\n    default: 'active'\n  },\n  buttonClass: {\n    type: [String, Array, Object],\n    default: null\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  variant: {\n    type: String,\n    default: null\n  }\n}\n\n// @vue/component\nexport const BDropdownItemButton = /*#__PURE__*/ Vue.extend({\n  name: 'BDropdownItemButton',\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  inject: {\n    bvDropdown: {\n      default: null\n    }\n  },\n  props,\n  methods: {\n    closeDropdown() {\n      if (this.bvDropdown) {\n        this.bvDropdown.hide(true)\n      }\n    },\n    onClick(evt) {\n      this.$emit('click', evt)\n      this.closeDropdown()\n    }\n  },\n  render(h) {\n    return h('li', { attrs: { role: 'presentation' } }, [\n      h(\n        'button',\n        {\n          staticClass: 'dropdown-item',\n          class: [\n            this.buttonClass,\n            {\n              [this.activeClass]: this.active,\n              [`text-${this.variant}`]: this.variant && !(this.active || this.disabled)\n            }\n          ],\n          attrs: {\n            ...this.$attrs,\n            role: 'menuitem',\n            type: 'button',\n            disabled: this.disabled\n          },\n          on: { click: this.onClick },\n          ref: 'button'\n        },\n        this.normalizeSlot('default')\n      )\n    ])\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\n\nexport const props = {\n  id: {\n    type: String,\n    default: null\n  },\n  tag: {\n    type: String,\n    default: 'header'\n  },\n  variant: {\n    type: String,\n    default: null\n  }\n}\n\n// @vue/component\nexport const BDropdownHeader = /*#__PURE__*/ Vue.extend({\n  name: 'BDropdownHeader',\n  functional: true,\n  props,\n  render(h, { props, data, children }) {\n    const $attrs = data.attrs || {}\n    data.attrs = {}\n    return h('li', mergeData(data, { attrs: { role: 'presentation' } }), [\n      h(\n        props.tag,\n        {\n          staticClass: 'dropdown-header',\n          class: {\n            [`text-${props.variant}`]: props.variant\n          },\n          attrs: {\n            ...$attrs,\n            id: props.id || null,\n            role: 'heading'\n          },\n          ref: 'header'\n        },\n        children\n      )\n    ])\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\n\nexport const props = {\n  tag: {\n    type: String,\n    default: 'hr'\n  }\n}\n\n// @vue/component\nexport const BDropdownDivider = /*#__PURE__*/ Vue.extend({\n  name: 'BDropdownDivider',\n  functional: true,\n  props,\n  render(h, { props, data }) {\n    const $attrs = data.attrs || {}\n    data.attrs = {}\n    return h('li', mergeData(data, { attrs: { role: 'presentation' } }), [\n      h(props.tag, {\n        staticClass: 'dropdown-divider',\n        attrs: {\n          ...$attrs,\n          role: 'separator',\n          'aria-orientation': 'horizontal'\n        },\n        ref: 'divider'\n      })\n    ])\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\nimport { BForm, props as formProps } from '../form/form'\n\n// @vue/component\nexport const BDropdownForm = /*#__PURE__*/ Vue.extend({\n  name: 'BDropdownForm',\n  functional: true,\n  props: {\n    ...formProps,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    formClass: {\n      type: [String, Object, Array],\n      default: null\n    }\n  },\n  render(h, { props, data, children }) {\n    const $attrs = data.attrs || {}\n    const $listeners = data.on || {}\n    data.attrs = {}\n    data.on = {}\n    return h('li', mergeData(data, { attrs: { role: 'presentation' } }), [\n      h(\n        BForm,\n        {\n          ref: 'form',\n          staticClass: 'b-dropdown-form',\n          class: [props.formClass, { disabled: props.disabled }],\n          props,\n          attrs: {\n            ...$attrs,\n            disabled: props.disabled,\n            // Tab index of -1 for keyboard navigation\n            tabindex: props.disabled ? null : '-1'\n          },\n          on: $listeners\n        },\n        children\n      )\n    ])\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\n\n// @vue/component\nexport const BDropdownText = /*#__PURE__*/ Vue.extend({\n  name: 'BDropdownText',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'p'\n    },\n    variant: {\n      type: String,\n      default: null\n    }\n  },\n  render(h, { props, data, children }) {\n    const $attrs = data.attrs || {}\n    data.attrs = {}\n    return h('li', mergeData(data, { attrs: { role: 'presentation' } }), [\n      h(\n        props.tag,\n        {\n          staticClass: 'b-dropdown-text',\n          class: {\n            [`text-${props.variant}`]: props.variant\n          },\n          props,\n          attrs: $attrs,\n          ref: 'text'\n        },\n        children\n      )\n    ])\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\nimport { hasNormalizedSlot, normalizeSlot } from '../../utils/normalize-slot'\n\nexport const props = {\n  id: {\n    type: String,\n    default: null\n  },\n  header: {\n    type: String,\n    default: null\n  },\n  headerTag: {\n    type: String,\n    default: 'header'\n  },\n  headerVariant: {\n    type: String,\n    default: null\n  },\n  headerClasses: {\n    type: [String, Array, Object],\n    default: null\n  },\n  ariaDescribedby: {\n    type: String,\n    default: null\n  }\n}\n\n// @vue/component\nexport const BDropdownGroup = /*#__PURE__*/ Vue.extend({\n  name: 'BDropdownGroup',\n  functional: true,\n  props,\n  render(h, { props, data, slots, scopedSlots }) {\n    const $slots = slots()\n    const $scopedSlots = scopedSlots || {}\n    const $attrs = data.attrs || {}\n    data.attrs = {}\n    let header\n    let headerId = null\n\n    if (hasNormalizedSlot('header', $scopedSlots, $slots) || props.header) {\n      headerId = props.id ? `_bv_${props.id}_group_dd_header` : null\n      header = h(\n        props.headerTag,\n        {\n          staticClass: 'dropdown-header',\n          class: [props.headerClasses, { [`text-${props.variant}`]: props.variant }],\n          attrs: {\n            id: headerId,\n            role: 'heading'\n          }\n        },\n        normalizeSlot('header', {}, $scopedSlots, $slots) || props.header\n      )\n    }\n\n    const adb = [headerId, props.ariaDescribedBy]\n      .filter(Boolean)\n      .join(' ')\n      .trim()\n\n    return h('li', mergeData(data, { attrs: { role: 'presentation' } }), [\n      header || h(),\n      h(\n        'ul',\n        {\n          staticClass: 'list-unstyled',\n          attrs: {\n            ...$attrs,\n            id: props.id || null,\n            role: 'group',\n            'aria-describedby': adb || null\n          }\n        },\n        normalizeSlot('default', {}, $scopedSlots, $slots)\n      )\n    ])\n  }\n})\n","import { BDropdown } from './dropdown'\nimport { BDropdownItem } from './dropdown-item'\nimport { BDropdownItemButton } from './dropdown-item-button'\nimport { BDropdownHeader } from './dropdown-header'\nimport { BDropdownDivider } from './dropdown-divider'\nimport { BDropdownForm } from './dropdown-form'\nimport { BDropdownText } from './dropdown-text'\nimport { BDropdownGroup } from './dropdown-group'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst DropdownPlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BDropdown,\n    BDd: BDropdown,\n    BDropdownItem,\n    BDdItem: BDropdownItem,\n    BDropdownItemButton,\n    BDropdownItemBtn: BDropdownItemButton,\n    BDdItemButton: BDropdownItemButton,\n    BDdItemBtn: BDropdownItemButton,\n    BDropdownHeader,\n    BDdHeader: BDropdownHeader,\n    BDropdownDivider,\n    BDdDivider: BDropdownDivider,\n    BDropdownForm,\n    BDdForm: BDropdownForm,\n    BDropdownText,\n    BDdText: BDropdownText,\n    BDropdownGroup,\n    BDdGroup: BDropdownGroup\n  }\n})\n\nexport {\n  DropdownPlugin,\n  BDropdown,\n  BDropdownItem,\n  BDropdownItemButton,\n  BDropdownHeader,\n  BDropdownDivider,\n  BDropdownForm,\n  BDropdownText,\n  BDropdownGroup\n}\n","import Vue from '../../utils/vue'\nimport { BVCollapse } from '../../utils/bv-collapse'\nimport { addClass, hasClass, removeClass, closest, matches, getCS } from '../../utils/dom'\nimport { isBrowser } from '../../utils/env'\nimport { EVENT_OPTIONS_NO_CAPTURE, eventOnOff } from '../../utils/events'\nimport idMixin from '../../mixins/id'\nimport listenOnRootMixin from '../../mixins/listen-on-root'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\nimport {\n  EVENT_TOGGLE,\n  EVENT_STATE,\n  EVENT_STATE_REQUEST,\n  EVENT_STATE_SYNC\n} from '../../directives/toggle/toggle'\n\n// --- Constants ---\n\n// Accordion event name we emit on `$root`\nconst EVENT_ACCORDION = 'bv::collapse::accordion'\n\n// --- Main component ---\n// @vue/component\nexport const BCollapse = /*#__PURE__*/ Vue.extend({\n  name: 'BCollapse',\n  mixins: [idMixin, listenOnRootMixin, normalizeSlotMixin],\n  model: {\n    prop: 'visible',\n    event: 'input'\n  },\n  props: {\n    isNav: {\n      type: Boolean,\n      default: false\n    },\n    accordion: {\n      type: String,\n      default: null\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    appear: {\n      // If `true` (and `visible` is `true` on mount), animate initially visible\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      show: this.visible,\n      transitioning: false\n    }\n  },\n  computed: {\n    classObject() {\n      return {\n        'navbar-collapse': this.isNav,\n        collapse: !this.transitioning,\n        show: this.show && !this.transitioning\n      }\n    }\n  },\n  watch: {\n    visible(newVal) {\n      if (newVal !== this.show) {\n        this.show = newVal\n      }\n    },\n    show(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.emitState()\n      }\n    }\n  },\n  created() {\n    this.show = this.visible\n  },\n  mounted() {\n    this.show = this.visible\n    // Listen for toggle events to open/close us\n    this.listenOnRoot(EVENT_TOGGLE, this.handleToggleEvt)\n    // Listen to other collapses for accordion events\n    this.listenOnRoot(EVENT_ACCORDION, this.handleAccordionEvt)\n    if (this.isNav) {\n      // Set up handlers\n      this.setWindowEvents(true)\n      this.handleResize()\n    }\n    this.$nextTick(() => {\n      this.emitState()\n    })\n    // Listen for \"Sync state\" requests from `v-b-toggle`\n    this.listenOnRoot(EVENT_STATE_REQUEST, id => {\n      if (id === this.safeId()) {\n        this.$nextTick(this.emitSync)\n      }\n    })\n  },\n  updated() {\n    // Emit a private event every time this component updates to ensure\n    // the toggle button is in sync with the collapse's state\n    // It is emitted regardless if the visible state changes\n    this.emitSync()\n  },\n  deactivated() /* istanbul ignore next */ {\n    if (this.isNav) {\n      this.setWindowEvents(false)\n    }\n  },\n  activated() /* istanbul ignore next */ {\n    if (this.isNav) {\n      this.setWindowEvents(true)\n    }\n    this.emitSync()\n  },\n  beforeDestroy() {\n    // Trigger state emit if needed\n    this.show = false\n    if (this.isNav && isBrowser) {\n      this.setWindowEvents(false)\n    }\n  },\n  methods: {\n    setWindowEvents(on) {\n      eventOnOff(on, window, 'resize', this.handleResize, EVENT_OPTIONS_NO_CAPTURE)\n      eventOnOff(on, window, 'orientationchange', this.handleResize, EVENT_OPTIONS_NO_CAPTURE)\n    },\n    toggle() {\n      this.show = !this.show\n    },\n    onEnter() {\n      this.transitioning = true\n      // This should be moved out so we can add cancellable events\n      this.$emit('show')\n    },\n    onAfterEnter() {\n      this.transitioning = false\n      this.$emit('shown')\n    },\n    onLeave() {\n      this.transitioning = true\n      // This should be moved out so we can add cancellable events\n      this.$emit('hide')\n    },\n    onAfterLeave() {\n      this.transitioning = false\n      this.$emit('hidden')\n    },\n    emitState() {\n      this.$emit('input', this.show)\n      // Let `v-b-toggle` know the state of this collapse\n      this.$root.$emit(EVENT_STATE, this.safeId(), this.show)\n      if (this.accordion && this.show) {\n        // Tell the other collapses in this accordion to close\n        this.$root.$emit(EVENT_ACCORDION, this.safeId(), this.accordion)\n      }\n    },\n    emitSync() {\n      // Emit a private event every time this component updates to ensure\n      // the toggle button is in sync with the collapse's state\n      // It is emitted regardless if the visible state changes\n      this.$root.$emit(EVENT_STATE_SYNC, this.safeId(), this.show)\n    },\n    checkDisplayBlock() {\n      // Check to see if the collapse has `display: block !important` set\n      // We can't set `display: none` directly on `this.$el`, as it would\n      // trigger a new transition to start (or cancel a current one)\n      const restore = hasClass(this.$el, 'show')\n      removeClass(this.$el, 'show')\n      const isBlock = getCS(this.$el).display === 'block'\n      if (restore) {\n        addClass(this.$el, 'show')\n      }\n      return isBlock\n    },\n    clickHandler(evt) {\n      // If we are in a nav/navbar, close the collapse when non-disabled link clicked\n      const el = evt.target\n      if (!this.isNav || !el || getCS(this.$el).display !== 'block') {\n        /* istanbul ignore next: can't test getComputedStyle in JSDOM */\n        return\n      }\n      if (matches(el, '.nav-link,.dropdown-item') || closest('.nav-link,.dropdown-item', el)) {\n        if (!this.checkDisplayBlock()) {\n          // Only close the collapse if it is not forced to be `display: block !important`\n          this.show = false\n        }\n      }\n    },\n    handleToggleEvt(target) {\n      if (target !== this.safeId()) {\n        return\n      }\n      this.toggle()\n    },\n    handleAccordionEvt(openedId, accordion) {\n      if (!this.accordion || accordion !== this.accordion) {\n        return\n      }\n      if (openedId === this.safeId()) {\n        // Open this collapse if not shown\n        if (!this.show) {\n          this.toggle()\n        }\n      } else {\n        // Close this collapse if shown\n        if (this.show) {\n          this.toggle()\n        }\n      }\n    },\n    handleResize() {\n      // Handler for orientation/resize to set collapsed state in nav/navbar\n      this.show = getCS(this.$el).display === 'block'\n    }\n  },\n  render(h) {\n    const scope = {\n      visible: this.show,\n      close: () => (this.show = false)\n    }\n    const content = h(\n      this.tag,\n      {\n        class: this.classObject,\n        directives: [{ name: 'show', value: this.show }],\n        attrs: { id: this.safeId() },\n        on: { click: this.clickHandler }\n      },\n      [this.normalizeSlot('default', scope)]\n    )\n    return h(\n      BVCollapse,\n      {\n        props: { appear: this.appear },\n        on: {\n          enter: this.onEnter,\n          afterEnter: this.onAfterEnter,\n          leave: this.onLeave,\n          afterLeave: this.onAfterLeave\n        }\n      },\n      [content]\n    )\n  }\n})\n","import { BCollapse } from './collapse'\nimport { VBToggle } from '../../directives/toggle/toggle'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst CollapsePlugin = /*#__PURE__*/ pluginFactory({\n  components: { BCollapse },\n  directives: { VBToggle }\n})\n\nexport { CollapsePlugin, BCollapse }\n","import { BImg } from './img'\nimport { BImgLazy } from './img-lazy'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst ImagePlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BImg,\n    BImgLazy\n  }\n})\n\nexport { ImagePlugin, BImg, BImgLazy }\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\n\nexport const props = {\n  tag: {\n    type: String,\n    default: 'div'\n  }\n}\n\n// @vue/component\nexport const BInputGroupText = /*#__PURE__*/ Vue.extend({\n  name: 'BInputGroupText',\n  functional: true,\n  props,\n  render(h, { props, data, children }) {\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'input-group-text'\n      }),\n      children\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\nimport { BInputGroupText } from './input-group-text'\n\nexport const commonProps = {\n  id: {\n    type: String,\n    default: null\n  },\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  isText: {\n    type: Boolean,\n    default: false\n  }\n}\n\n// @vue/component\nexport const BInputGroupAddon = /*#__PURE__*/ Vue.extend({\n  name: 'BInputGroupAddon',\n  functional: true,\n  props: {\n    ...commonProps,\n    append: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render(h, { props, data, children }) {\n    return h(\n      props.tag,\n      mergeData(data, {\n        class: {\n          'input-group-append': props.append,\n          'input-group-prepend': !props.append\n        },\n        attrs: {\n          id: props.id\n        }\n      }),\n      props.isText ? [h(BInputGroupText, children)] : children\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\nimport { BInputGroupAddon, commonProps } from './input-group-addon'\n\n// @vue/component\nexport const BInputGroupPrepend = /*#__PURE__*/ Vue.extend({\n  name: 'BInputGroupPrepend',\n  functional: true,\n  props: commonProps,\n  render(h, { props, data, children }) {\n    // pass all our props/attrs down to child, and set`append` to false\n    return h(\n      BInputGroupAddon,\n      mergeData(data, {\n        props: { ...props, append: false }\n      }),\n      children\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\nimport { BInputGroupAddon, commonProps } from './input-group-addon'\n\n// @vue/component\nexport const BInputGroupAppend = /*#__PURE__*/ Vue.extend({\n  name: 'BInputGroupAppend',\n  functional: true,\n  props: commonProps,\n  render(h, { props, data, children }) {\n    // pass all our props/attrs down to child, and set`append` to true\n    return h(\n      BInputGroupAddon,\n      mergeData(data, {\n        props: { ...props, append: true }\n      }),\n      children\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\nimport { getComponentConfig } from '../../utils/config'\nimport { htmlOrText } from '../../utils/html'\nimport { hasNormalizedSlot, normalizeSlot } from '../../utils/normalize-slot'\nimport { BInputGroupPrepend } from './input-group-prepend'\nimport { BInputGroupAppend } from './input-group-append'\nimport { BInputGroupText } from './input-group-text'\n\nconst NAME = 'BInputGroup'\n\nexport const props = {\n  id: {\n    type: String\n  },\n  size: {\n    type: String,\n    default: () => getComponentConfig(NAME, 'size')\n  },\n  prepend: {\n    type: String\n  },\n  prependHtml: {\n    type: String\n  },\n  append: {\n    type: String\n  },\n  appendHtml: {\n    type: String\n  },\n  tag: {\n    type: String,\n    default: 'div'\n  }\n}\n\n// @vue/component\nexport const BInputGroup = /*#__PURE__*/ Vue.extend({\n  name: NAME,\n  functional: true,\n  props,\n  render(h, { props, data, slots, scopedSlots }) {\n    const $slots = slots()\n    const $scopedSlots = scopedSlots || {}\n\n    const childNodes = []\n\n    // Prepend prop/slot\n    if (props.prepend || props.prependHtml || hasNormalizedSlot('prepend', $scopedSlots, $slots)) {\n      childNodes.push(\n        h(BInputGroupPrepend, [\n          // Prop\n          props.prepend || props.prependHtml\n            ? h(BInputGroupText, { domProps: htmlOrText(props.prependHtml, props.prepend) })\n            : h(),\n          // Slot\n          normalizeSlot('prepend', {}, $scopedSlots, $slots) || h()\n        ])\n      )\n    } else {\n      childNodes.push(h())\n    }\n\n    // Default slot\n    if (hasNormalizedSlot('default', $scopedSlots, $slots)) {\n      childNodes.push(...normalizeSlot('default', {}, $scopedSlots, $slots))\n    } else {\n      childNodes.push(h())\n    }\n\n    // Append prop\n    if (props.append || props.appendHtml || hasNormalizedSlot('append', $scopedSlots, $slots)) {\n      childNodes.push(\n        h(BInputGroupAppend, [\n          // prop\n          props.append || props.appendHtml\n            ? h(BInputGroupText, { domProps: htmlOrText(props.appendHtml, props.append) })\n            : h(),\n          // Slot\n          normalizeSlot('append', {}, $scopedSlots, $slots) || h()\n        ])\n      )\n    } else {\n      childNodes.push(h())\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'input-group',\n        class: { [`input-group-${props.size}`]: props.size },\n        attrs: {\n          id: props.id || null,\n          role: 'group'\n        }\n      }),\n      childNodes\n    )\n  }\n})\n","import { BInputGroup } from './input-group'\nimport { BInputGroupAddon } from './input-group-addon'\nimport { BInputGroupPrepend } from './input-group-prepend'\nimport { BInputGroupAppend } from './input-group-append'\nimport { BInputGroupText } from './input-group-text'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst InputGroupPlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BInputGroup,\n    BInputGroupAddon,\n    BInputGroupPrepend,\n    BInputGroupAppend,\n    BInputGroupText\n  }\n})\n\nexport {\n  InputGroupPlugin,\n  BInputGroup,\n  BInputGroupAddon,\n  BInputGroupPrepend,\n  BInputGroupAppend,\n  BInputGroupText\n}\n","import get from '../../../utils/get'\nimport { isArray, isPlainObject, isUndefined } from '../../../utils/inspect'\nimport formOptionsMixin from '../../../mixins/form-options'\n\n// @vue/component\nexport default {\n  mixins: [formOptionsMixin],\n  props: {\n    labelField: {\n      type: String,\n      default: 'label'\n    },\n    optionsField: {\n      type: String,\n      default: 'options'\n    }\n  },\n  methods: {\n    normalizeOption(option, key = null) {\n      // When the option is an object, normalize it\n      if (isPlainObject(option)) {\n        const value = get(option, this.valueField)\n        const text = get(option, this.textField)\n        const options = get(option, this.optionsField)\n        // When it has options, create an `<optgroup>` object\n        if (isArray(options)) {\n          return {\n            label: String(get(option, this.labelField) || text),\n            options\n          }\n        }\n        // Otherwise create an `<option>` object\n        return {\n          value: isUndefined(value) ? key || text : value,\n          text: String(isUndefined(text) ? key : text),\n          html: get(option, this.htmlField),\n          disabled: Boolean(get(option, this.disabledField))\n        }\n      }\n      // Otherwise create an `<option>` object from the given value\n      return {\n        value: key || option,\n        text: String(option),\n        disabled: false\n      }\n    }\n  }\n}\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\n\nconst NAME = 'BFormSelectOption'\n\nexport const props = {\n  value: {\n    // type: [String, Number, Boolean, Object],\n    required: true\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n}\n\n// @vue/component\nexport const BFormSelectOption = /*#__PURE__*/ Vue.extend({\n  name: NAME,\n  functional: true,\n  props,\n  render(h, { props, data, children }) {\n    const { value, disabled } = props\n    return h(\n      'option',\n      mergeData(data, {\n        attrs: { disabled },\n        domProps: { value }\n      }),\n      children\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport { htmlOrText } from '../../utils/html'\nimport formOptionsMixin from '../../mixins/form-options'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\nimport { BFormSelectOption } from './form-select-option'\n\n// @vue/component\nconst BFormSelectOptionGroup = /*#__PURE__*/ Vue.extend({\n  name: 'BFormSelectOptionGroup',\n  mixins: [normalizeSlotMixin, formOptionsMixin],\n  props: {\n    label: {\n      type: String,\n      required: true\n    }\n  },\n  render(h) {\n    return h('optgroup', { attrs: { label: this.label } }, [\n      this.normalizeSlot('first'),\n      this.formOptions.map((option, index) =>\n        h(BFormSelectOption, {\n          props: { value: option.value, disabled: option.disabled },\n          domProps: htmlOrText(option.html, option.text),\n          key: `option_${index}_opt`\n        })\n      ),\n      this.normalizeSlot('default')\n    ])\n  }\n})\n\nexport { BFormSelectOptionGroup }\n","import Vue from '../../utils/vue'\nimport { from as arrayFrom, isArray } from '../../utils/array'\nimport { htmlOrText } from '../../utils/html'\nimport idMixin from '../../mixins/id'\nimport formMixin from '../../mixins/form'\nimport formSizeMixin from '../../mixins/form-size'\nimport formStateMixin from '../../mixins/form-state'\nimport formCustomMixin from '../../mixins/form-custom'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\nimport optionsMixin from './helpers/mixin-options'\nimport { BFormSelectOption } from './form-select-option'\nimport { BFormSelectOptionGroup } from './form-select-option-group'\n\n// @vue/component\nexport const BFormSelect = /*#__PURE__*/ Vue.extend({\n  name: 'BFormSelect',\n  mixins: [\n    idMixin,\n    normalizeSlotMixin,\n    formMixin,\n    formSizeMixin,\n    formStateMixin,\n    formCustomMixin,\n    optionsMixin\n  ],\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: {\n    value: {\n      // type: [Object, Array, String, Number, Boolean],\n      // default: undefined\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    selectSize: {\n      // Browsers default size to 0, which shows 4 rows in most browsers in multiple mode\n      // Size of 1 can bork out Firefox\n      type: Number,\n      default: 0\n    },\n    ariaInvalid: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n  data() {\n    return {\n      localValue: this.value\n    }\n  },\n  computed: {\n    computedSelectSize() {\n      // Custom selects with a size of zero causes the arrows to be hidden,\n      // so dont render the size attribute in this case\n      return !this.plain && this.selectSize === 0 ? null : this.selectSize\n    },\n    inputClass() {\n      return [\n        this.plain ? 'form-control' : 'custom-select',\n        this.size && this.plain ? `form-control-${this.size}` : null,\n        this.size && !this.plain ? `custom-select-${this.size}` : null,\n        this.stateClass\n      ]\n    },\n    computedAriaInvalid() {\n      if (this.ariaInvalid === true || this.ariaInvalid === 'true') {\n        return 'true'\n      }\n      return this.stateClass === 'is-invalid' ? 'true' : null\n    }\n  },\n  watch: {\n    value(newVal) {\n      this.localValue = newVal\n    },\n    localValue() {\n      this.$emit('input', this.localValue)\n    }\n  },\n  methods: {\n    focus() {\n      this.$refs.input.focus()\n    },\n    blur() {\n      this.$refs.input.blur()\n    }\n  },\n  render(h) {\n    return h(\n      'select',\n      {\n        ref: 'input',\n        class: this.inputClass,\n        directives: [\n          {\n            name: 'model',\n            rawName: 'v-model',\n            value: this.localValue,\n            expression: 'localValue'\n          }\n        ],\n        attrs: {\n          id: this.safeId(),\n          name: this.name,\n          form: this.form || null,\n          multiple: this.multiple || null,\n          size: this.computedSelectSize,\n          disabled: this.disabled,\n          required: this.required,\n          'aria-required': this.required ? 'true' : null,\n          'aria-invalid': this.computedAriaInvalid\n        },\n        on: {\n          change: evt => {\n            const target = evt.target\n            const selectedVal = arrayFrom(target.options)\n              .filter(o => o.selected)\n              .map(o => ('_value' in o ? o._value : o.value))\n            this.localValue = target.multiple ? selectedVal : selectedVal[0]\n            this.$nextTick(() => {\n              this.$emit('change', this.localValue)\n            })\n          }\n        }\n      },\n      [\n        this.normalizeSlot('first'),\n        this.formOptions.map((option, index) => {\n          const key = `option_${index}_opt`\n          const options = option.options\n          return isArray(options)\n            ? h(BFormSelectOptionGroup, { props: { label: option.label, options }, key })\n            : h(BFormSelectOption, {\n                props: { value: option.value, disabled: option.disabled },\n                domProps: htmlOrText(option.html, option.text),\n                key\n              })\n        }),\n        this.normalizeSlot('default')\n      ]\n    )\n  }\n})\n","import { BFormSelect } from './form-select'\nimport { BFormSelectOption } from './form-select-option'\nimport { BFormSelectOptionGroup } from './form-select-option-group'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst FormSelectPlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BFormSelect,\n    BFormSelectOption,\n    BFormSelectOptionGroup,\n    BSelect: BFormSelect,\n    BSelectOption: BFormSelectOption,\n    BSelectOptionGroup: BFormSelectOptionGroup\n  }\n})\n\nexport { FormSelectPlugin, BFormSelect, BFormSelectOption, BFormSelectOptionGroup }\n","import Vue from '../../utils/vue'\nimport { mergeData } from 'vue-functional-data-merge'\nimport { arrayIncludes } from '../../utils/array'\n\nexport const props = {\n  type: {\n    type: String,\n    default: 'iframe',\n    validator: str =>\n      arrayIncludes(['iframe', 'embed', 'video', 'object', 'img', 'b-img', 'b-img-lazy'], str)\n  },\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  aspect: {\n    type: String,\n    default: '16by9'\n  }\n}\n\n// @vue/component\nexport const BEmbed = /*#__PURE__*/ Vue.extend({\n  name: 'BEmbed',\n  functional: true,\n  props,\n  render(h, { props, data, children }) {\n    return h(\n      props.tag,\n      {\n        ref: data.ref,\n        staticClass: 'embed-responsive',\n        class: {\n          [`embed-responsive-${props.aspect}`]: props.aspect\n        }\n      },\n      [h(props.type, mergeData(data, { ref: '', staticClass: 'embed-responsive-item' }), children)]\n    )\n  }\n})\n","import { BEmbed } from './embed'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst EmbedPlugin = /*#__PURE__*/ pluginFactory({\n  components: { BEmbed }\n})\n\nexport { EmbedPlugin, BEmbed }\n","import Vue from '../../utils/vue'\nimport formOptionsMixin from '../../mixins/form-options'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\nimport { htmlOrText } from '../../utils/html'\n\n// @vue/component\nexport const BFormDatalist = /*#__PURE__*/ Vue.extend({\n  name: 'BFormDatalist',\n  mixins: [formOptionsMixin, normalizeSlotMixin],\n  props: {\n    id: {\n      type: String,\n      default: null,\n      required: true\n    }\n  },\n  render(h) {\n    const options = this.formOptions.map((option, index) => {\n      return h('option', {\n        key: `option_${index}_opt`,\n        attrs: { disabled: option.disabled },\n        domProps: { ...htmlOrText(option.html, option.text), value: option.value }\n      })\n    })\n    return h('datalist', { attrs: { id: this.id } }, [options, this.normalizeSlot('default')])\n  }\n})\n","import { BForm } from './form'\nimport { BFormDatalist } from './form-datalist'\nimport { BFormText } from './form-text'\nimport { BFormInvalidFeedback } from './form-invalid-feedback'\nimport { BFormValidFeedback } from './form-valid-feedback'\nimport { BFormRow } from '../layout/form-row'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst FormPlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BForm,\n    BFormDatalist,\n    BDatalist: BFormDatalist,\n    BFormText,\n    BFormInvalidFeedback,\n    BFormFeedback: BFormInvalidFeedback,\n    BFormValidFeedback,\n    // Added here for convenience\n    BFormRow\n  }\n})\n\n// BFormRow is not exported here as a named export, as it is exported by Layout\nexport { FormPlugin, BForm, BFormDatalist, BFormText, BFormInvalidFeedback, BFormValidFeedback }\n","import Vue from '../../utils/vue'\nimport idMixin from '../../mixins/id'\nimport formMixin from '../../mixins/form'\nimport formOptionsMixin from '../../mixins/form-options'\nimport formRadioCheckGroupMixin from '../../mixins/form-radio-check-group'\nimport formSizeMixin from '../../mixins/form-size'\nimport formStateMixin from '../../mixins/form-state'\n\nexport const props = {\n  switches: {\n    // Custom switch styling\n    type: Boolean,\n    default: false\n  },\n  checked: {\n    type: Array,\n    default: null\n  }\n}\n\n// @vue/component\nexport const BFormCheckboxGroup = /*#__PURE__*/ Vue.extend({\n  name: 'BFormCheckboxGroup',\n  mixins: [\n    idMixin,\n    formMixin,\n    formRadioCheckGroupMixin, // Includes render function\n    formOptionsMixin,\n    formSizeMixin,\n    formStateMixin\n  ],\n  provide() {\n    return {\n      bvCheckGroup: this\n    }\n  },\n  props,\n  data() {\n    return {\n      localChecked: this.checked || []\n    }\n  },\n  computed: {\n    isRadioGroup() {\n      return false\n    }\n  }\n})\n","import { BFormCheckbox } from './form-checkbox'\nimport { BFormCheckboxGroup } from './form-checkbox-group'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst FormCheckboxPlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BFormCheckbox,\n    BCheckbox: BFormCheckbox,\n    BCheck: BFormCheckbox,\n    BFormCheckboxGroup,\n    BCheckboxGroup: BFormCheckboxGroup,\n    BCheckGroup: BFormCheckboxGroup\n  }\n})\n\nexport { FormCheckboxPlugin, BFormCheckbox, BFormCheckboxGroup }\n","import Vue from '../../utils/vue'\nimport identity from '../../utils/identity'\nimport { from as arrayFrom, isArray, concat } from '../../utils/array'\nimport { getComponentConfig } from '../../utils/config'\nimport { isFile, isFunction, isUndefinedOrNull } from '../../utils/inspect'\nimport { File } from '../../utils/safe-types'\nimport { toString } from '../../utils/string'\nimport { warn } from '../../utils/warn'\nimport formCustomMixin from '../../mixins/form-custom'\nimport formMixin from '../../mixins/form'\nimport formStateMixin from '../../mixins/form-state'\nimport idMixin from '../../mixins/id'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n\n// --- Constants ---\n\nconst NAME = 'BFormFile'\n\nconst VALUE_EMPTY_DEPRECATED_MSG =\n  'Setting \"value\"/\"v-model\" to an empty string for reset is deprecated. Set to \"null\" instead.'\n\n// --- Helper methods ---\n\nconst isValidValue = value => isFile(value) || (isArray(value) && value.every(v => isValidValue(v)))\n\n// @vue/component\nexport const BFormFile = /*#__PURE__*/ Vue.extend({\n  name: NAME,\n  mixins: [idMixin, formMixin, formStateMixin, formCustomMixin, normalizeSlotMixin],\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: {\n    size: {\n      type: String,\n      default: () => getComponentConfig('BFormControl', 'size')\n    },\n    value: {\n      type: [File, Array],\n      default: null,\n      validator: value => {\n        /* istanbul ignore next */\n        if (value === '') {\n          warn(VALUE_EMPTY_DEPRECATED_MSG, NAME)\n          return true\n        }\n        return isUndefinedOrNull(value) || isValidValue(value)\n      }\n    },\n    accept: {\n      type: String,\n      default: ''\n    },\n    // Instruct input to capture from camera\n    capture: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: {\n      type: String,\n      default: () => getComponentConfig(NAME, 'placeholder')\n    },\n    browseText: {\n      type: String,\n      default: () => getComponentConfig(NAME, 'browseText')\n    },\n    dropPlaceholder: {\n      type: String,\n      default: () => getComponentConfig(NAME, 'dropPlaceholder')\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    directory: {\n      type: Boolean,\n      default: false\n    },\n    noTraverse: {\n      type: Boolean,\n      default: false\n    },\n    noDrop: {\n      type: Boolean,\n      default: false\n    },\n    fileNameFormatter: {\n      type: Function,\n      default: null\n    }\n  },\n  data() {\n    return {\n      selectedFile: null,\n      dragging: false,\n      hasFocus: false\n    }\n  },\n  computed: {\n    selectLabel() {\n      // Draging active\n      if (this.dragging && this.dropPlaceholder) {\n        return this.dropPlaceholder\n      }\n\n      // No file chosen\n      if (!this.selectedFile || this.selectedFile.length === 0) {\n        return this.placeholder\n      }\n\n      // Convert selectedFile to an array (if not already one)\n      const files = concat(this.selectedFile).filter(identity)\n\n      if (this.hasNormalizedSlot('file-name')) {\n        // There is a slot for formatting the files/names\n        return [\n          this.normalizeSlot('file-name', {\n            files: files,\n            names: files.map(f => f.name)\n          })\n        ]\n      } else {\n        // Use the user supplied formatter, or the built in one.\n        return isFunction(this.fileNameFormatter)\n          ? toString(this.fileNameFormatter(files))\n          : files.map(file => file.name).join(', ')\n      }\n    }\n  },\n  watch: {\n    selectedFile(newVal, oldVal) {\n      // The following test is needed when the file input is \"reset\" or the\n      // exact same file(s) are selected to prevent an infinite loop.\n      // When in `multiple` mode we need to check for two empty arrays or\n      // two arrays with identical files\n      if (\n        newVal === oldVal ||\n        (isArray(newVal) &&\n          isArray(oldVal) &&\n          newVal.length === oldVal.length &&\n          newVal.every((v, i) => v === oldVal[i]))\n      ) {\n        return\n      }\n      if (!newVal && this.multiple) {\n        this.$emit('input', [])\n      } else {\n        this.$emit('input', newVal)\n      }\n    },\n    value(newVal) {\n      if (!newVal || (isArray(newVal) && newVal.length === 0)) {\n        this.reset()\n      }\n    }\n  },\n  methods: {\n    focusHandler(evt) {\n      // Bootstrap v4 doesn't have focus styling for custom file input\n      // Firefox has a '[type=file]:focus ~ sibling' selector issue,\n      // so we add a 'focus' class to get around these bugs\n      if (this.plain || evt.type === 'focusout') {\n        this.hasFocus = false\n      } else {\n        // Add focus styling for custom file input\n        this.hasFocus = true\n      }\n    },\n    reset() {\n      // IE 11 doesn't support setting `$input.value` to `''` or `null`\n      // So we use this little extra hack to reset the value, just in case\n      // This also appears to work on modern browsers as well\n      // Wrapped in try in case IE 11 or mobile Safari crap out\n      try {\n        const $input = this.$refs.input\n        $input.value = ''\n        $input.type = ''\n        $input.type = 'file'\n      } catch (e) {}\n      this.selectedFile = this.multiple ? [] : null\n    },\n    onFileChange(evt) {\n      // Always emit original event\n      this.$emit('change', evt)\n      // Check if special `items` prop is available on event (drop mode)\n      // Can be disabled by setting no-traverse\n      const items = evt.dataTransfer && evt.dataTransfer.items\n      /* istanbul ignore next: not supported in JSDOM */\n      if (items && !this.noTraverse) {\n        const queue = []\n        for (let i = 0; i < items.length; i++) {\n          const item = items[i].webkitGetAsEntry()\n          if (item) {\n            queue.push(this.traverseFileTree(item))\n          }\n        }\n        Promise.all(queue).then(filesArr => {\n          this.setFiles(arrayFrom(filesArr))\n        })\n        return\n      }\n      // Normal handling\n      this.setFiles(evt.target.files || evt.dataTransfer.files)\n    },\n    setFiles(files = []) {\n      if (!files) {\n        /* istanbul ignore next: this will probably not happen */\n        this.selectedFile = null\n      } else if (this.multiple) {\n        // Convert files to array\n        const filesArray = []\n        for (let i = 0; i < files.length; i++) {\n          filesArray.push(files[i])\n        }\n        // Return file(s) as array\n        this.selectedFile = filesArray\n      } else {\n        // Return single file object\n        this.selectedFile = files[0] || null\n      }\n    },\n    onReset() {\n      // Triggered when the parent form (if any) is reset\n      this.selectedFile = this.multiple ? [] : null\n    },\n    onDragover(evt) /* istanbul ignore next: difficult to test in JSDOM */ {\n      evt.preventDefault()\n      evt.stopPropagation()\n      if (this.noDrop || !this.custom) {\n        return\n      }\n      this.dragging = true\n      evt.dataTransfer.dropEffect = 'copy'\n    },\n    onDragleave(evt) /* istanbul ignore next: difficult to test in JSDOM */ {\n      evt.preventDefault()\n      evt.stopPropagation()\n      this.dragging = false\n    },\n    onDrop(evt) /* istanbul ignore next: difficult to test in JSDOM */ {\n      evt.preventDefault()\n      evt.stopPropagation()\n      if (this.noDrop) {\n        return\n      }\n      this.dragging = false\n      if (evt.dataTransfer.files && evt.dataTransfer.files.length > 0) {\n        this.onFileChange(evt)\n      }\n    },\n    traverseFileTree(item, path) /* istanbul ignore next: not supported in JSDOM */ {\n      // Based on https://stackoverflow.com/questions/3590058\n      return new Promise(resolve => {\n        path = path || ''\n        if (item.isFile) {\n          // Get file\n          item.file(file => {\n            file.$path = path // Inject $path to file obj\n            resolve(file)\n          })\n        } else if (item.isDirectory) {\n          // Get folder contents\n          item.createReader().readEntries(entries => {\n            const queue = []\n            for (let i = 0; i < entries.length; i++) {\n              queue.push(this.traverseFileTree(entries[i], path + item.name + '/'))\n            }\n            Promise.all(queue).then(filesArr => {\n              resolve(arrayFrom(filesArr))\n            })\n          })\n        }\n      })\n    }\n  },\n  render(h) {\n    // Form Input\n    const input = h('input', {\n      ref: 'input',\n      class: [\n        {\n          'form-control-file': this.plain,\n          'custom-file-input': this.custom,\n          focus: this.custom && this.hasFocus\n        },\n        this.stateClass\n      ],\n      attrs: {\n        ...this.$attrs,\n        type: 'file',\n        id: this.safeId(),\n        name: this.name,\n        disabled: this.disabled,\n        required: this.required,\n        form: this.form || null,\n        capture: this.capture || null,\n        accept: this.accept || null,\n        multiple: this.multiple,\n        webkitdirectory: this.directory,\n        'aria-required': this.required ? 'true' : null\n      },\n      on: {\n        change: this.onFileChange,\n        focusin: this.focusHandler,\n        focusout: this.focusHandler,\n        reset: this.onReset\n      }\n    })\n\n    if (this.plain) {\n      return input\n    }\n\n    // Overlay Labels\n    const label = h(\n      'label',\n      {\n        staticClass: 'custom-file-label',\n        class: [this.dragging ? 'dragging' : null],\n        attrs: {\n          for: this.safeId(),\n          'data-browse': this.browseText || null\n        }\n      },\n      this.selectLabel\n    )\n\n    // Return rendered custom file input\n    return h(\n      'div',\n      {\n        staticClass: 'custom-file b-form-file',\n        class: [\n          this.stateClass,\n          {\n            [`b-custom-control-${this.size}`]: this.size\n          }\n        ],\n        attrs: { id: this.safeId('_BV_file_outer_') },\n        on: {\n          dragover: this.onDragover,\n          dragleave: this.onDragleave,\n          drop: this.onDrop\n        }\n      },\n      [input, label]\n    )\n  }\n})\n","import { BFormFile } from './form-file'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst FormFilePlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BFormFile,\n    BFile: BFormFile\n  }\n})\n\nexport { FormFilePlugin, BFormFile }\n","// Utils\nimport memoize from '../../utils/memoize'\nimport { arrayIncludes } from '../../utils/array'\nimport { getBreakpointsUpCached } from '../../utils/config'\nimport { select, selectAll, isVisible, setAttr, removeAttr, getAttr } from '../../utils/dom'\nimport { isBrowser } from '../../utils/env'\nimport { isBoolean } from '../../utils/inspect'\nimport { keys, create } from '../../utils/object'\nimport { upperFirst } from '../../utils/string'\n// Mixins\nimport formStateMixin from '../../mixins/form-state'\nimport idMixin from '../../mixins/id'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n// Sub components\nimport { BCol } from '../layout/col'\nimport { BFormRow } from '../layout/form-row'\nimport { BFormText } from '../form/form-text'\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback'\nimport { BFormValidFeedback } from '../form/form-valid-feedback'\n\n// Component name\nconst NAME = 'BFormGroup'\n\n// Selector for finding first input in the form-group\nconst SELECTOR = 'input:not([disabled]),textarea:not([disabled]),select:not([disabled])'\n\n// Render helper functions (here rather than polluting the instance with more methods)\nconst renderInvalidFeedback = (h, ctx) => {\n  const content = ctx.normalizeSlot('invalid-feedback') || ctx.invalidFeedback\n  let invalidFeedback = h()\n  if (content) {\n    invalidFeedback = h(\n      BFormInvalidFeedback,\n      {\n        props: {\n          id: ctx.invalidFeedbackId,\n          // If state is explicitly false, always show the feedback\n          state: ctx.computedState,\n          tooltip: ctx.tooltip,\n          ariaLive: ctx.feedbackAriaLive,\n          role: ctx.feedbackAriaLive ? 'alert' : null\n        },\n        attrs: { tabindex: content ? '-1' : null }\n      },\n      [content]\n    )\n  }\n  return invalidFeedback\n}\n\nconst renderValidFeedback = (h, ctx) => {\n  const content = ctx.normalizeSlot('valid-feedback') || ctx.validFeedback\n  let validFeedback = h()\n  if (content) {\n    validFeedback = h(\n      BFormValidFeedback,\n      {\n        props: {\n          id: ctx.validFeedbackId,\n          // If state is explicitly true, always show the feedback\n          state: ctx.computedState,\n          tooltip: ctx.tooltip,\n          ariaLive: ctx.feedbackAriaLive,\n          role: ctx.feedbackAriaLive ? 'alert' : null\n        },\n        attrs: { tabindex: content ? '-1' : null }\n      },\n      [content]\n    )\n  }\n  return validFeedback\n}\n\nconst renderHelpText = (h, ctx) => {\n  // Form help text (description)\n  const content = ctx.normalizeSlot('description') || ctx.description\n  let description = h()\n  if (content) {\n    description = h(\n      BFormText,\n      {\n        attrs: {\n          id: ctx.descriptionId,\n          tabindex: content ? '-1' : null\n        }\n      },\n      [content]\n    )\n  }\n  return description\n}\n\nconst renderLabel = (h, ctx) => {\n  // Render label/legend inside b-col if necessary\n  const content = ctx.normalizeSlot('label') || ctx.label\n  const labelFor = ctx.labelFor\n  const isLegend = !labelFor\n  const isHorizontal = ctx.isHorizontal\n  const labelTag = isLegend ? 'legend' : 'label'\n  if (!content && !isHorizontal) {\n    return h()\n  } else if (ctx.labelSrOnly) {\n    let label = h()\n    if (content) {\n      label = h(\n        labelTag,\n        {\n          class: 'sr-only',\n          attrs: { id: ctx.labelId, for: labelFor || null }\n        },\n        [content]\n      )\n    }\n    return h(isHorizontal ? BCol : 'div', { props: isHorizontal ? ctx.labelColProps : {} }, [label])\n  } else {\n    return h(\n      isHorizontal ? BCol : labelTag,\n      {\n        on: isLegend ? { click: ctx.legendClick } : {},\n        props: isHorizontal ? { tag: labelTag, ...ctx.labelColProps } : {},\n        attrs: {\n          id: ctx.labelId,\n          for: labelFor || null,\n          // We add a tab index to legend so that screen readers\n          // will properly read the aria-labelledby in IE.\n          tabindex: isLegend ? '-1' : null\n        },\n        class: [\n          // Hide the focus ring on the legend\n          isLegend ? 'bv-no-focus-ring' : '',\n          // When horizontal or if a legend is rendered, add col-form-label\n          // for correct sizing as Bootstrap has inconsistent font styling\n          // for legend in non-horizontal form-groups.\n          // See: https://github.com/twbs/bootstrap/issues/27805\n          isHorizontal || isLegend ? 'col-form-label' : '',\n          // Emulate label padding top of 0 on legend when not horizontal\n          !isHorizontal && isLegend ? 'pt-0' : '',\n          // If not horizontal and not a legend, we add d-block to label\n          // so that label-align works\n          !isHorizontal && !isLegend ? 'd-block' : '',\n          ctx.labelSize ? `col-form-label-${ctx.labelSize}` : '',\n          ctx.labelAlignClasses,\n          ctx.labelClass\n        ]\n      },\n      [content]\n    )\n  }\n}\n\n// -- BFormGroup Prop factory -- used for lazy generation of props\n\n// Memoize this function to return cached values to\n// save time in computed functions\nconst makePropName = memoize((breakpoint = '', prefix) => {\n  return `${prefix}${upperFirst(breakpoint)}`\n})\n\n// BFormGroup prop generator for lazy generation of props\nconst generateProps = () => {\n  const BREAKPOINTS = getBreakpointsUpCached()\n\n  // Generate the labelCol breakpoint props\n  const bpLabelColProps = BREAKPOINTS.reduce((props, breakpoint) => {\n    // i.e. label-cols, label-cols-sm, label-cols-md, ...\n    props[makePropName(breakpoint, 'labelCols')] = {\n      type: [Number, String, Boolean],\n      default: breakpoint ? false : null\n    }\n    return props\n  }, create(null))\n\n  // Generate the labelAlign breakpoint props\n  const bpLabelAlignProps = BREAKPOINTS.reduce((props, breakpoint) => {\n    // label-align, label-align-sm, label-align-md, ...\n    props[makePropName(breakpoint, 'labelAlign')] = {\n      type: String, // left, right, center\n      default: null\n    }\n    return props\n  }, create(null))\n\n  return {\n    label: {\n      type: String,\n      default: null\n    },\n    labelFor: {\n      type: String,\n      default: null\n    },\n    labelSize: {\n      type: String,\n      default: null\n    },\n    labelSrOnly: {\n      type: Boolean,\n      default: false\n    },\n    // label-cols prop and all label-cols-{bp} props\n    ...bpLabelColProps,\n    // label-align prop and all label-align-{bp} props\n    ...bpLabelAlignProps,\n    labelClass: {\n      type: [String, Array, Object],\n      default: null\n    },\n    description: {\n      type: String,\n      default: null\n    },\n    invalidFeedback: {\n      type: String,\n      default: null\n    },\n    validFeedback: {\n      type: String,\n      default: null\n    },\n    tooltip: {\n      // Enable tooltip style feedback\n      type: Boolean,\n      default: false\n    },\n    feedbackAriaLive: {\n      type: String,\n      default: 'assertive'\n    },\n    validated: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  }\n}\n\n// We do not use Vue.extend here as that would evaluate the props\n// immediately, which we do not want to happen\n// @vue/component\nexport const BFormGroup = {\n  name: NAME,\n  mixins: [idMixin, formStateMixin, normalizeSlotMixin],\n  get props() {\n    // Allow props to be lazy evaled on first access and\n    // then they become a non-getter afterwards.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters\n    delete this.props\n    // eslint-disable-next-line no-return-assign\n    return (this.props = generateProps())\n  },\n  computed: {\n    labelColProps() {\n      const props = {}\n      getBreakpointsUpCached().forEach(breakpoint => {\n        // Grab the value if the label column breakpoint prop\n        let propVal = this[makePropName(breakpoint, 'labelCols')]\n        // Handle case where the prop's value is an empty string,\n        // which represents true\n        propVal = propVal === '' ? true : propVal || false\n        if (!isBoolean(propVal) && propVal !== 'auto') {\n          // Convert to column size to number\n          propVal = parseInt(propVal, 10) || 0\n          // Ensure column size is greater than 0\n          propVal = propVal > 0 ? propVal : false\n        }\n        if (propVal) {\n          // Add the prop to the list of props to give to b-col\n          // If breakpoint is '' (labelCols=true), then we use the\n          // col prop to make equal width at xs\n          const bColPropName = breakpoint || (isBoolean(propVal) ? 'col' : 'cols')\n          // Add it to the props\n          props[bColPropName] = propVal\n        }\n      })\n      return props\n    },\n    labelAlignClasses() {\n      const classes = []\n      getBreakpointsUpCached().forEach(breakpoint => {\n        // Assemble the label column breakpoint align classes\n        const propVal = this[makePropName(breakpoint, 'labelAlign')] || null\n        if (propVal) {\n          const className = breakpoint ? `text-${breakpoint}-${propVal}` : `text-${propVal}`\n          classes.push(className)\n        }\n      })\n      return classes\n    },\n    isHorizontal() {\n      // Determine if the resultant form-group will be rendered\n      // horizontal (meaning it has label-col breakpoints)\n      return keys(this.labelColProps).length > 0\n    },\n    labelId() {\n      return this.hasNormalizedSlot('label') || this.label ? this.safeId('_BV_label_') : null\n    },\n    descriptionId() {\n      return this.hasNormalizedSlot('description') || this.description\n        ? this.safeId('_BV_description_')\n        : null\n    },\n    hasInvalidFeedback() {\n      // Used for computing aria-describedby\n      return (\n        this.computedState === false &&\n        (this.hasNormalizedSlot('invalid-feedback') || this.invalidFeedback)\n      )\n    },\n    invalidFeedbackId() {\n      return this.hasInvalidFeedback ? this.safeId('_BV_feedback_invalid_') : null\n    },\n    hasValidFeedback() {\n      // Used for computing aria-describedby\n      return (\n        this.computedState === true &&\n        (this.hasNormalizedSlot('valid-feedback') || this.validFeedback)\n      )\n    },\n    validFeedbackId() {\n      return this.hasValidFeedback ? this.safeId('_BV_feedback_valid_') : null\n    },\n    describedByIds() {\n      // Screen readers will read out any content linked to by aria-describedby\n      // even if the content is hidden with `display: none;`, hence we only include\n      // feedback IDs if the form-group's state is explicitly valid or invalid.\n      return (\n        [this.descriptionId, this.invalidFeedbackId, this.validFeedbackId]\n          .filter(Boolean)\n          .join(' ') || null\n      )\n    }\n  },\n  watch: {\n    describedByIds(add, remove) {\n      if (add !== remove) {\n        this.setInputDescribedBy(add, remove)\n      }\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      // Set the aria-describedby IDs on the input specified by label-for\n      // We do this in a nextTick to ensure the children have finished rendering\n      this.setInputDescribedBy(this.describedByIds)\n    })\n  },\n  methods: {\n    legendClick(evt) {\n      if (this.labelFor) {\n        // Don't do anything if labelFor is set\n        /* istanbul ignore next: clicking a label will focus the input, so no need to test */\n        return\n      }\n      const tagName = evt.target ? evt.target.tagName : ''\n      if (/^(input|select|textarea|label|button|a)$/i.test(tagName)) {\n        // If clicked an interactive element inside legend,\n        // we just let the default happen\n        /* istanbul ignore next */\n        return\n      }\n      const inputs = selectAll(SELECTOR, this.$refs.content).filter(isVisible)\n      if (inputs && inputs.length === 1 && inputs[0].focus) {\n        // if only a single input, focus it, emulating label behaviour\n        try {\n          inputs[0].focus()\n        } catch {}\n      }\n    },\n    setInputDescribedBy(add, remove) {\n      // Sets the `aria-describedby` attribute on the input if label-for is set.\n      // Optionally accepts a string of IDs to remove as the second parameter.\n      // Preserves any aria-describedby value(s) user may have on input.\n      if (this.labelFor && isBrowser) {\n        const input = select(`#${this.labelFor}`, this.$refs.content)\n        if (input) {\n          const adb = 'aria-describedby'\n          let ids = (getAttr(input, adb) || '').split(/\\s+/)\n          add = (add || '').split(/\\s+/)\n          remove = (remove || '').split(/\\s+/)\n          // Update ID list, preserving any original IDs\n          // and ensuring the ID's are unique\n          ids = ids\n            .filter(id => !arrayIncludes(remove, id))\n            .concat(add)\n            .filter(Boolean)\n          ids = keys(ids.reduce((memo, id) => ({ ...memo, [id]: true }), {}))\n            .join(' ')\n            .trim()\n          if (ids) {\n            setAttr(input, adb, ids)\n          } else {\n            // No IDs, so remove the attribute\n            removeAttr(input, adb)\n          }\n        }\n      }\n    }\n  },\n  render(h) {\n    const isFieldset = !this.labelFor\n    const isHorizontal = this.isHorizontal\n    // Generate the label\n    const label = renderLabel(h, this)\n    // Generate the content\n    const content = h(\n      isHorizontal ? BCol : 'div',\n      {\n        ref: 'content',\n        // Hide focus ring\n        staticClass: 'bv-no-focus-ring',\n        attrs: {\n          tabindex: isFieldset ? '-1' : null,\n          role: isFieldset ? 'group' : null\n        }\n      },\n      [\n        this.normalizeSlot('default') || h(),\n        renderInvalidFeedback(h, this),\n        renderValidFeedback(h, this),\n        renderHelpText(h, this)\n      ]\n    )\n    // Create the form-group\n    const data = {\n      staticClass: 'form-group',\n      class: [this.validated ? 'was-validated' : null, this.stateClass],\n      attrs: {\n        id: this.safeId(),\n        disabled: isFieldset ? this.disabled : null,\n        role: isFieldset ? null : 'group',\n        'aria-invalid': this.computedState === false ? 'true' : null,\n        // Only apply aria-labelledby if we are a horizontal fieldset\n        // as the legend is no longer a direct child of fieldset\n        'aria-labelledby': isFieldset && isHorizontal ? this.labelId : null,\n        // Only apply aria-describedby IDs if we are a fieldset\n        // as the input will have the IDs when not a fieldset\n        'aria-describedby': isFieldset ? this.describedByIds : null\n      }\n    }\n    // Return it wrapped in a form-group\n    // Note: Fieldsets do not support adding `row` or `form-row` directly\n    // to them due to browser specific render issues, so we move the `form-row`\n    // to an inner wrapper div when horizontal and using a fieldset\n    return h(\n      isFieldset ? 'fieldset' : isHorizontal ? BFormRow : 'div',\n      data,\n      isHorizontal && isFieldset ? [h(BFormRow, [label, content])] : [label, content]\n    )\n  }\n}\n","import { BFormGroup } from './form-group'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst FormGroupPlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BFormGroup,\n    BFormFieldset: BFormGroup\n  }\n})\n\nexport { FormGroupPlugin, BFormGroup }\n","import Vue from '../../utils/vue'\nimport { arrayIncludes } from '../../utils/array'\nimport { eventOn, eventOff, eventOnOff } from '../../utils/events'\nimport idMixin from '../../mixins/id'\nimport formMixin from '../../mixins/form'\nimport formSizeMixin from '../../mixins/form-size'\nimport formStateMixin from '../../mixins/form-state'\nimport formTextMixin from '../../mixins/form-text'\nimport formSelectionMixin from '../../mixins/form-selection'\nimport formValidityMixin from '../../mixins/form-validity'\n\n// Valid supported input types\nconst TYPES = [\n  'text',\n  'password',\n  'email',\n  'number',\n  'url',\n  'tel',\n  'search',\n  'range',\n  'color',\n  'date',\n  'time',\n  'datetime',\n  'datetime-local',\n  'month',\n  'week'\n]\n\n// @vue/component\nexport const BFormInput = /*#__PURE__*/ Vue.extend({\n  name: 'BFormInput',\n  mixins: [\n    idMixin,\n    formMixin,\n    formSizeMixin,\n    formStateMixin,\n    formTextMixin,\n    formSelectionMixin,\n    formValidityMixin\n  ],\n  props: {\n    // value prop defined in form-text mixin\n    // value: { },\n    type: {\n      type: String,\n      default: 'text',\n      validator: type => arrayIncludes(TYPES, type)\n    },\n    noWheel: {\n      // Disable mousewheel to prevent wheel from changing values (i.e. number/date).\n      type: Boolean,\n      default: false\n    },\n    min: {\n      type: [String, Number],\n      default: null\n    },\n    max: {\n      type: [String, Number],\n      default: null\n    },\n    step: {\n      type: [String, Number],\n      default: null\n    },\n    list: {\n      type: String,\n      default: null\n    }\n  },\n  computed: {\n    localType() {\n      // We only allow certain types\n      return arrayIncludes(TYPES, this.type) ? this.type : 'text'\n    }\n  },\n  watch: {\n    noWheel(newVal) {\n      this.setWheelStopper(newVal)\n    }\n  },\n  mounted() {\n    this.setWheelStopper(this.noWheel)\n  },\n  deactivated() {\n    // Turn off listeners when keep-alive component deactivated\n    /* istanbul ignore next */\n    this.setWheelStopper(false)\n  },\n  activated() {\n    // Turn on listeners (if no-wheel) when keep-alive component activated\n    /* istanbul ignore next */\n    this.setWheelStopper(this.noWheel)\n  },\n  beforeDestroy() {\n    /* istanbul ignore next */\n    this.setWheelStopper(false)\n  },\n  methods: {\n    setWheelStopper(on) {\n      const input = this.$el\n      // We use native events, so that we don't interfere with propagation\n      eventOnOff(on, input, 'focus', this.onWheelFocus)\n      eventOnOff(on, input, 'blur', this.onWheelBlur)\n      if (!on) {\n        eventOff(document, 'wheel', this.stopWheel)\n      }\n    },\n    onWheelFocus() {\n      eventOn(document, 'wheel', this.stopWheel)\n    },\n    onWheelBlur() {\n      eventOff(document, 'wheel', this.stopWheel)\n    },\n    stopWheel(evt) {\n      evt.preventDefault()\n      this.$el.blur()\n    }\n  },\n  render(h) {\n    var self = this\n    return h('input', {\n      ref: 'input',\n      class: self.computedClass,\n      directives: [\n        {\n          name: 'model',\n          rawName: 'v-model',\n          value: self.localValue,\n          expression: 'localValue'\n        }\n      ],\n      attrs: {\n        id: self.safeId(),\n        name: self.name,\n        form: self.form || null,\n        type: self.localType,\n        disabled: self.disabled,\n        placeholder: self.placeholder,\n        required: self.required,\n        autocomplete: self.autocomplete || null,\n        readonly: self.readonly || self.plaintext,\n        min: self.min,\n        max: self.max,\n        step: self.step,\n        list: self.localType !== 'password' ? self.list : null,\n        'aria-required': self.required ? 'true' : null,\n        'aria-invalid': self.computedAriaInvalid\n      },\n      domProps: {\n        value: self.localValue\n      },\n      on: {\n        ...self.$listeners,\n        input: self.onInput,\n        change: self.onChange,\n        blur: self.onBlur\n      }\n    })\n  }\n})\n","import { BFormInput } from './form-input'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst FormInputPlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BFormInput,\n    BInput: BFormInput\n  }\n})\n\nexport { FormInputPlugin, BFormInput }\n","import Vue from '../../utils/vue'\nimport idMixin from '../../mixins/id'\nimport formMixin from '../../mixins/form'\nimport formOptionsMixin from '../../mixins/form-options'\nimport formRadioCheckGroupMixin from '../../mixins/form-radio-check-group'\nimport formSizeMixin from '../../mixins/form-size'\nimport formStateMixin from '../../mixins/form-state'\n\nexport const props = {\n  checked: {\n    // type: [String, Number, Boolean, Object],\n    default: null\n  }\n}\n\n// @vue/component\nexport const BFormRadioGroup = /*#__PURE__*/ Vue.extend({\n  name: 'BFormRadioGroup',\n  mixins: [\n    idMixin,\n    formMixin,\n    formRadioCheckGroupMixin, // Includes render function\n    formOptionsMixin,\n    formSizeMixin,\n    formStateMixin\n  ],\n  provide() {\n    return {\n      bvRadioGroup: this\n    }\n  },\n  props,\n  data() {\n    return {\n      localChecked: this.checked\n    }\n  },\n  computed: {\n    isRadioGroup() {\n      return true\n    }\n  }\n})\n","import { BFormRadio } from './form-radio'\nimport { BFormRadioGroup } from './form-radio-group'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst FormRadioPlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BFormRadio,\n    BRadio: BFormRadio,\n    BFormRadioGroup,\n    BRadioGroup: BFormRadioGroup\n  }\n})\n\nexport { FormRadioPlugin, BFormRadio, BFormRadioGroup }\n","import Vue from '../../utils/vue'\nimport { VBVisible } from '../../directives/visible/visible'\nimport idMixin from '../../mixins/id'\nimport formMixin from '../../mixins/form'\nimport formSizeMixin from '../../mixins/form-size'\nimport formStateMixin from '../../mixins/form-state'\nimport formTextMixin from '../../mixins/form-text'\nimport formSelectionMixin from '../../mixins/form-selection'\nimport formValidityMixin from '../../mixins/form-validity'\nimport listenOnRootMixin from '../../mixins/listen-on-root'\nimport { getCS, isVisible, requestAF } from '../../utils/dom'\nimport { isNull } from '../../utils/inspect'\n\n// @vue/component\nexport const BFormTextarea = /*#__PURE__*/ Vue.extend({\n  name: 'BFormTextarea',\n  directives: {\n    'b-visible': VBVisible\n  },\n  mixins: [\n    idMixin,\n    listenOnRootMixin,\n    formMixin,\n    formSizeMixin,\n    formStateMixin,\n    formTextMixin,\n    formSelectionMixin,\n    formValidityMixin\n  ],\n  props: {\n    rows: {\n      type: [Number, String],\n      default: 2\n    },\n    maxRows: {\n      type: [Number, String],\n      default: null\n    },\n    wrap: {\n      // 'soft', 'hard' or 'off'. Browser default is 'soft'\n      type: String,\n      default: 'soft'\n    },\n    noResize: {\n      // Disable the resize handle of textarea\n      type: Boolean,\n      default: false\n    },\n    noAutoShrink: {\n      // When in auto resize mode, disable shrinking to content height\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      heightInPx: null\n    }\n  },\n  computed: {\n    computedStyle() {\n      const styles = {\n        // Setting `noResize` to true will disable the ability for the user to\n        // manually resize the textarea. We also disable when in auto height mode\n        resize: !this.computedRows || this.noResize ? 'none' : null\n      }\n      if (!this.computedRows) {\n        // Conditionally set the computed CSS height when auto rows/height is enabled\n        // We avoid setting the style to `null`, which can override user manual resize handle\n        styles.height = this.heightInPx\n        // We always add a vertical scrollbar to the textarea when auto-height is\n        // enabled so that the computed height calculation returns a stable value\n        styles.overflowY = 'scroll'\n      }\n      return styles\n    },\n    computedMinRows() {\n      // Ensure rows is at least 2 and positive (2 is the native textarea value)\n      // A value of 1 can cause issues in some browsers, and most browsers\n      // only support 2 as the smallest value\n      return Math.max(parseInt(this.rows, 10) || 2, 2)\n    },\n    computedMaxRows() {\n      return Math.max(this.computedMinRows, parseInt(this.maxRows, 10) || 0)\n    },\n    computedRows() {\n      // This is used to set the attribute 'rows' on the textarea\n      // If auto-height is enabled, then we return `null` as we use CSS to control height\n      return this.computedMinRows === this.computedMaxRows ? this.computedMinRows : null\n    }\n  },\n  watch: {\n    localValue() {\n      this.setHeight()\n    }\n  },\n  mounted() {\n    this.setHeight()\n  },\n  methods: {\n    // Called by intersection observer directive\n    visibleCallback(visible) /* istanbul ignore next */ {\n      if (visible) {\n        // We use a `$nextTick()` here just to make sure any\n        // transitions or portalling have completed\n        this.$nextTick(this.setHeight)\n      }\n    },\n    setHeight() {\n      this.$nextTick(() => {\n        requestAF(() => {\n          this.heightInPx = this.computeHeight()\n        })\n      })\n    },\n    computeHeight() /* istanbul ignore next: can't test getComputedStyle in JSDOM */ {\n      if (this.$isServer || !isNull(this.computedRows)) {\n        return null\n      }\n\n      const el = this.$el\n\n      // Element must be visible (not hidden) and in document\n      // Must be checked after above checks\n      if (!isVisible(el)) {\n        return null\n      }\n\n      // Get current computed styles\n      const computedStyle = getCS(el)\n      // Height of one line of text in px\n      const lineHeight = parseFloat(computedStyle.lineHeight)\n      // Calculate height of border and padding\n      const border =\n        (parseFloat(computedStyle.borderTopWidth) || 0) +\n        (parseFloat(computedStyle.borderBottomWidth) || 0)\n      const padding =\n        (parseFloat(computedStyle.paddingTop) || 0) + (parseFloat(computedStyle.paddingBottom) || 0)\n      // Calculate offset\n      const offset = border + padding\n      // Minimum height for min rows (which must be 2 rows or greater for cross-browser support)\n      const minHeight = lineHeight * this.computedMinRows + offset\n\n      // Get the current style height (with `px` units)\n      const oldHeight = el.style.height || computedStyle.height\n      // Probe scrollHeight by temporarily changing the height to `auto`\n      el.style.height = 'auto'\n      const scrollHeight = el.scrollHeight\n      // Place the original old height back on the element, just in case `computedProp`\n      // returns the same value as before\n      el.style.height = oldHeight\n\n      // Calculate content height in 'rows' (scrollHeight includes padding but not border)\n      const contentRows = Math.max((scrollHeight - padding) / lineHeight, 2)\n      // Calculate number of rows to display (limited within min/max rows)\n      const rows = Math.min(Math.max(contentRows, this.computedMinRows), this.computedMaxRows)\n      // Calculate the required height of the textarea including border and padding (in pixels)\n      const height = Math.max(Math.ceil(rows * lineHeight + offset), minHeight)\n\n      // Computed height remains the larger of `oldHeight` and new `height`,\n      // when height is in `sticky` mode (prop `no-auto-shrink` is true)\n      if (this.noAutoShrink && (parseFloat(oldHeight) || 0) > height) {\n        return oldHeight\n      }\n\n      // Return the new computed CSS height in px units\n      return `${height}px`\n    }\n  },\n  render(h) {\n    // Using self instead of this helps reduce code size during minification\n    const self = this\n    return h('textarea', {\n      ref: 'input',\n      class: self.computedClass,\n      style: self.computedStyle,\n      directives: [\n        {\n          name: 'model',\n          value: self.localValue\n        },\n        {\n          name: 'b-visible',\n          value: this.visibleCallback,\n          // If textarea is within 640px of viewport, consider it visible\n          modifiers: { '640': true }\n        }\n      ],\n      attrs: {\n        id: self.safeId(),\n        name: self.name,\n        form: self.form || null,\n        disabled: self.disabled,\n        placeholder: self.placeholder,\n        required: self.required,\n        autocomplete: self.autocomplete || null,\n        readonly: self.readonly || self.plaintext,\n        rows: self.computedRows,\n        wrap: self.wrap || null,\n        'aria-required': self.required ? 'true' : null,\n        'aria-invalid': self.computedAriaInvalid\n      },\n      domProps: {\n        value: self.localValue\n      },\n      on: {\n        ...self.$listeners,\n        input: self.onInput,\n        change: self.onChange,\n        blur: self.onBlur\n      }\n    })\n  }\n})\n","import { BFormTextarea } from './form-textarea'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst FormTextareaPlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BFormTextarea,\n    BTextarea: BFormTextarea\n  }\n})\n\nexport { FormTextareaPlugin, BFormTextarea }\n"],"sourceRoot":""}