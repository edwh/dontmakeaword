{"version":3,"sources":["webpack:///./node_modules/@sentry/hub/esm/scope.js","webpack:///./node_modules/@sentry/core/esm/api.js","webpack:///./node_modules/@sentry/core/esm/integration.js","webpack:///./node_modules/@sentry/core/esm/baseclient.js","webpack:///./node_modules/@sentry/core/esm/transports/noop.js","webpack:///./node_modules/@sentry/core/esm/basebackend.js","webpack:///./node_modules/@sentry/browser/esm/tracekit.js","webpack:///./node_modules/@sentry/browser/esm/parsers.js","webpack:///./node_modules/@sentry/browser/esm/eventbuilder.js","webpack:///./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack:///./node_modules/@sentry/browser/esm/transports/base.js","webpack:///./node_modules/@sentry/browser/esm/transports/fetch.js","webpack:///./node_modules/@sentry/browser/esm/transports/xhr.js","webpack:///./node_modules/@sentry/browser/esm/backend.js","webpack:///./node_modules/@sentry/browser/esm/version.js","webpack:///./node_modules/@sentry/browser/esm/client.js","webpack:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack:///./node_modules/@sentry/browser/esm/helpers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack:///./node_modules/@sentry/browser/esm/integrations/useragent.js","webpack:///./node_modules/@sentry/browser/esm/sdk.js","webpack:///./node_modules/@sentry/core/esm/sdk.js","webpack:///./node_modules/@sentry/browser/esm/index.js","webpack:///./node_modules/@sentry/hub/esm/hub.js"],"names":["Scope","this","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","prototype","addScopeListener","callback","push","addEventProcessor","_notifyScopeListeners","_this","setTimeout","forEach","_notifyEventProcessors","processors","event","hint","index","resolve","reject","processor","result","then","final","setUser","user","setTags","tags","setTag","key","value","_a","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","_fingerprint","setLevel","level","_level","setTransaction","transaction","_transaction","_span","setContext","context","setSpan","span","getSpan","clone","scope","newScope","clear","undefined","addBreadcrumb","breadcrumb","maxBreadcrumbs","mergedBreadcrumb","timestamp","slice","clearBreadcrumbs","_applyFingerprint","Array","isArray","concat","length","applyToEvent","Object","keys","contexts","trace","getTraceContext","breadcrumbs","getGlobalEventProcessors","global","__SENTRY__","globalEventProcessors","addGlobalEventProcessor","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","protocol","port","host","path","projectId","getRequestHeaders","clientName","clientVersion","header","pass","join","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","toString","name","encodeURIComponent","email","installedIntegrations","setupIntegrations","options","integrations","defaultIntegrations","userIntegrations","userIntegrationsNames_1","map","i","pickedIntegrationsNames_1","defaultIntegration","indexOf","userIntegration","integrationsNames","apply","splice","getIntegrationsToSetup","integration","setupOnce","logger","log","setupIntegration","BaseClient","backendClass","_integrations","_processing","_backend","_options","_dsn","captureException","exception","eventId","event_id","_getBackend","eventFromException","_processEvent","finalEvent","reason","error","captureMessage","message","is","eventFromMessage","captureEvent","getOptions","flush","timeout","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","enabled","_isEnabled","getIntegration","id","_oO","warn","ticked","setInterval","_prepareEvent","environment","release","dist","_b","maxValueLength","_c","normalizeDepth","prepared","values","request","url","_addIntegrations","sdk","evt","_normalizeEvent","depth","b","data","sdkInfo","integrationsArray","beforeSend","sampleRate","Math","random","__sentry__","sendEvent","beforeSendResult","_handleAsyncBeforeSend","originalException","processedEvent","e","NoopTransport","_","Skipped","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","chrome","gecko","winjs","geckoEval","chromeEval","computeStackTrace","ex","stack","popSize","framesToPop","stacktrace","parts","opera10Regex","opera11Regex","lines","split","line","element","exec","func","args","column","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","substr","columnNumber","computeStackTraceFromStackProp","failed","exceptionFromStacktrace","frames","prepareFramesForEvent","type","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","filename","function","in_app","lineno","reverse","eventFromUnknownInput","syntheticException","domException","name_1","eventFromString","rejection","constructor","__serialized__","frames_1","eventFromPlainObject","synthetic","input","attachStacktrace","originalFunctionToString","BaseTransport","_buffer","drain","_super","FetchTransport","arguments","_disabledUntil","Date","now","Promise","defaultOptions","body","JSON","stringify","method","referrerPolicy","supports","headers","add","fetch","response","fromHttpCode","Success","RateLimit","get","catch","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","open","hasOwnProperty","setRequestHeader","send","BrowserBackend","call","transportOptions","transport","handled","Error","Info","SDK_NAME","SDK_VERSION","BrowserClient","platform","packages","version","showReportDialog","document","script","createElement","async","src","onLoad","onload","head","appendChild","FunctionToString","Function","_i","__sentry_original__","DEFAULT_IGNORE_ERRORS","InboundFilters","hub","self","client","getClient","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","pattern","blacklistUrls","whitelistUrls","oO","frames_2","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","fn","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","mechanism","property","defineProperty","enumerable","defineProperties","getOwnPropertyDescriptor","configurable","TryCatch","_ignoreOnError","_wrapTimeFunction","original","originalCallback","_wrapRAF","handler","_wrapEventTarget","target","proto","eventName","bind","err","_wrapXHR","originalSend","xhr","xmlHttpRequestProps","prop","wrapOptions","Breadcrumbs","console","dom","history","sentry","_consoleBreadcrumb","handlerData","category","fromString","_domBreadcrumb","_xhrBreadcrumb","endTimestamp","__sentry_own_request__","__sentry_xhr__","addSentryBreadcrumb","_fetchBreadcrumb","filterUrl","fetchData","status_code","_historyBreadcrumb","from","to","parsedLoc","location","href","parsedFrom","parsedTo","relative","serializedData","event_1","parse","GlobalHandlers","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","onerror","onunhandledrejection","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","msg","_enhanceEventWithInitialFrame","detail","_eventFromIncompleteRejection","groups","match","isNaN","parseInt","LinkedErrors","_key","_limit","limit","_handler","linkedErrors","_walkErrorTree","UserAgent","navigator","userAgent","init","window_1","SENTRY_RELEASE","clientClass","debug","enable","bindClient","initAndBind","lastEventId","forceLoad","windowIntegrations","_window","Sentry","Integrations","INTEGRATIONS","Hub","_version","_stack","_invokeClient","top","getStackTop","isOlderThan","pushScope","getStack","parentScope","popScope","pop","withScope","getScope","_lastEventId","finalHint","beforeBreadcrumb","finalBreadcrumb","min","configureScope","run","oldHub","makeMain","startSpan","spanOrSpanContext","forceNoChild","_callExtensionMethod","traceHeaders","carrier","getMainCarrier","extensions","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","activeDomain","active","registryHubTopStack","_Oo","getHubFromActiveDomain"],"mappings":"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","file":"36bedbcc64d764dd4bef.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isThenable, SyncPromise, timestampWithMs } from '@sentry/utils';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._context = {};\n    }\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            setTimeout(function () {\n                _this._scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this._notifyingListeners = false;\n            });\n        }\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            // tslint:disable-next-line:strict-type-predicates\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(tslib_1.__assign({}, event), hint);\n                if (isThenable(result)) {\n                    result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .then(null, reject);\n                }\n                else {\n                    _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .then(null, reject);\n                }\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = user || {};\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = tslib_1.__assign({}, this._tags, tags);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = tslib_1.__assign({}, this._tags, (_a = {}, _a[key] = value, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extras) {\n        this._extra = tslib_1.__assign({}, this._extra, extras);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = tslib_1.__assign({}, this._extra, (_a = {}, _a[key] = extra, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = fingerprint;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = level;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransaction = function (transaction) {\n        this._transaction = transaction;\n        if (this._span) {\n            this._span.transaction = transaction;\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (key, context) {\n        var _a;\n        this._context = tslib_1.__assign({}, this._context, (_a = {}, _a[key] = context, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Internal getter for Span, used in Hub.\n     * @hidden\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        if (scope) {\n            newScope._breadcrumbs = tslib_1.__spread(scope._breadcrumbs);\n            newScope._tags = tslib_1.__assign({}, scope._tags);\n            newScope._extra = tslib_1.__assign({}, scope._extra);\n            newScope._context = tslib_1.__assign({}, scope._context);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._transaction = scope._transaction;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = tslib_1.__spread(scope._eventProcessors);\n        }\n        return newScope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._context = {};\n        this._level = undefined;\n        this._transaction = undefined;\n        this._fingerprint = undefined;\n        this._span = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestampWithMs() }, breadcrumb);\n        this._breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? tslib_1.__spread(this._breadcrumbs, [mergedBreadcrumb]).slice(-maxBreadcrumbs)\n                : tslib_1.__spread(this._breadcrumbs, [mergedBreadcrumb]);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = tslib_1.__assign({}, this._extra, event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = tslib_1.__assign({}, this._tags, event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = tslib_1.__assign({}, this._user, event.user);\n        }\n        if (this._context && Object.keys(this._context).length) {\n            event.contexts = tslib_1.__assign({}, this._context, event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transaction) {\n            event.transaction = this._transaction;\n        }\n        if (this._span) {\n            event.contexts = tslib_1.__assign({ trace: this._span.getTraceContext() }, event.contexts);\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = tslib_1.__spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(tslib_1.__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","import { Dsn, urlEncode } from '@sentry/utils';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype._getBaseUrl = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        integrations = tslib_1.__spread(defaultIntegrations);\n    }\n    // Make sure that if present, `Debug` integration will always run last\n    var integrationsNames = integrations.map(function (i) { return i.name; });\n    var alwaysLastToRun = 'Debug';\n    if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n        integrations.push.apply(integrations, tslib_1.__spread(integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1)));\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import * as tslib_1 from \"tslib\";\nimport { Dsn, isPrimitive, isThenable, logger, normalize, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Array of used integrations. */\n        this._integrations = {};\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        promisedEvent\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (status) {\n            clearInterval(status.interval);\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return status.ready && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * Sets up the integrations\n     */\n    BaseClient.prototype.setupIntegrations = function () {\n        if (this._isEnabled()) {\n            this._integrations = setupIntegrations(this._options);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            var interval = 0;\n            clearInterval(interval);\n            interval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve({\n                        interval: interval,\n                        ready: true,\n                    });\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve({\n                            interval: interval,\n                            ready: false,\n                        });\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _this = this;\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b, _c = _a.normalizeDepth, normalizeDepth = _c === void 0 ? 3 : _c;\n        var prepared = tslib_1.__assign({}, event);\n        if (prepared.environment === undefined && environment !== undefined) {\n            prepared.environment = environment;\n        }\n        if (prepared.release === undefined && release !== undefined) {\n            prepared.release = release;\n        }\n        if (prepared.dist === undefined && dist !== undefined) {\n            prepared.dist = dist;\n        }\n        if (prepared.message) {\n            prepared.message = truncate(prepared.message, maxValueLength);\n        }\n        var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = prepared.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n        if (prepared.event_id === undefined) {\n            prepared.event_id = hint && hint.event_id ? hint.event_id : uuid4();\n        }\n        this._addIntegrations(prepared.sdk);\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (scope) {\n            // In case we have a hub we reassign it.\n            result = scope.applyToEvent(prepared, hint);\n        }\n        return result.then(function (evt) {\n            // tslint:disable-next-line:strict-type-predicates\n            if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n                return _this._normalizeEvent(evt, normalizeDepth);\n            }\n            return evt;\n        });\n    };\n    /**\n     * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n     * Normalized keys:\n     * - `breadcrumbs.data`\n     * - `user`\n     * - `contexts`\n     * - `extra`\n     * @param event Event\n     * @returns Normalized event\n     */\n    BaseClient.prototype._normalizeEvent = function (event, depth) {\n        if (!event) {\n            return null;\n        }\n        // tslint:disable:no-unsafe-any\n        return tslib_1.__assign({}, event, (event.breadcrumbs && {\n            breadcrumbs: event.breadcrumbs.map(function (b) { return (tslib_1.__assign({}, b, (b.data && {\n                data: normalize(b.data, depth),\n            }))); }),\n        }), (event.user && {\n            user: normalize(event.user, depth),\n        }), (event.contexts && {\n            contexts: normalize(event.contexts, depth),\n        }), (event.extra && {\n            extra: normalize(event.extra, depth),\n        }));\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._addIntegrations = function (sdkInfo) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint)\n                .then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                if (isInternalException || !beforeSend) {\n                    _this._getBackend().sendEvent(finalEvent);\n                    resolve(finalEvent);\n                    return;\n                }\n                var beforeSendResult = beforeSend(prepared, hint);\n                // tslint:disable-next-line:strict-type-predicates\n                if (typeof beforeSendResult === 'undefined') {\n                    logger.error('`beforeSend` method has to return `null` or a valid event.');\n                }\n                else if (isThenable(beforeSendResult)) {\n                    _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                }\n                else {\n                    finalEvent = beforeSendResult;\n                    if (finalEvent === null) {\n                        logger.log('`beforeSend` returned `null`, will not send event.');\n                        resolve(null);\n                        return;\n                    }\n                    // From here on we are really async\n                    _this._getBackend().sendEvent(finalEvent);\n                    resolve(finalEvent);\n                }\n            })\n                .then(null, function (reason) {\n                _this.captureException(reason, {\n                    data: {\n                        __sentry__: true,\n                    },\n                    originalException: reason,\n                });\n                reject(\"Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: \" + reason);\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._getBackend().sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .then(null, function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","import { Status } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return SyncPromise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return SyncPromise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).then(null, function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","// tslint:disable:object-literal-sort-keys\nimport * as tslib_1 from \"tslib\";\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nvar geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nvar chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n/** JSDoc */\nexport function computeStackTrace(ex) {\n    // tslint:disable:no-unsafe-any\n    var stack = null;\n    var popSize = ex && ex.framesToPop;\n    try {\n        // This must be tried first because Opera 10 *destroys*\n        // its stacktrace property if you try to access the stack\n        // property first!!\n        stack = computeStackTraceFromStacktraceProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    try {\n        stack = computeStackTraceFromStackProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex && ex.name,\n        stack: [],\n        failed: true,\n    };\n}\n/** JSDoc */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction computeStackTraceFromStackProp(ex) {\n    // tslint:disable:no-conditional-assignment\n    if (!ex || !ex.stack) {\n        return null;\n    }\n    var stack = [];\n    var lines = ex.stack.split('\\n');\n    var isEval;\n    var submatch;\n    var parts;\n    var element;\n    for (var i = 0; i < lines.length; ++i) {\n        if ((parts = chrome.exec(lines[i]))) {\n            var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n            isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n            if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                // throw out eval line/column and use top-most line/column number\n                parts[2] = submatch[1]; // url\n                parts[3] = submatch[2]; // line\n                parts[4] = submatch[3]; // column\n            }\n            element = {\n                // working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n                // prefix here seems like the quickest solution for now.\n                url: parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: isNative ? [parts[2]] : [],\n                line: parts[3] ? +parts[3] : null,\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = winjs.exec(lines[i]))) {\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: [],\n                line: +parts[3],\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = gecko.exec(lines[i]))) {\n            isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n            if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                // throw out eval line/column and use top-most line number\n                parts[1] = parts[1] || \"eval\";\n                parts[3] = submatch[1];\n                parts[4] = submatch[2];\n                parts[5] = ''; // no column when eval\n            }\n            else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                // FireFox uses this awesome columnNumber property for its top frame\n                // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                // so adding 1\n                // NOTE: this hack doesn't work if top-most frame is eval\n                stack[0].column = ex.columnNumber + 1;\n            }\n            element = {\n                url: parts[3],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: parts[2] ? parts[2].split(',') : [],\n                line: parts[4] ? +parts[4] : null,\n                column: parts[5] ? +parts[5] : null,\n            };\n        }\n        else {\n            continue;\n        }\n        if (!element.func && element.line) {\n            element.func = UNKNOWN_FUNCTION;\n        }\n        stack.push(element);\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** JSDoc */\nfunction computeStackTraceFromStacktraceProp(ex) {\n    if (!ex || !ex.stacktrace) {\n        return null;\n    }\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n    var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n    var lines = stacktrace.split('\\n');\n    var stack = [];\n    var parts;\n    for (var line = 0; line < lines.length; line += 2) {\n        // tslint:disable:no-conditional-assignment\n        var element = null;\n        if ((parts = opera10Regex.exec(lines[line]))) {\n            element = {\n                url: parts[2],\n                func: parts[3],\n                args: [],\n                line: +parts[1],\n                column: null,\n            };\n        }\n        else if ((parts = opera11Regex.exec(lines[line]))) {\n            element = {\n                url: parts[6],\n                func: parts[3] || parts[4],\n                args: parts[5] ? parts[5].split(',') : [],\n                line: +parts[1],\n                column: +parts[2],\n            };\n        }\n        if (element) {\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            stack.push(element);\n        }\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace, popSize) {\n    try {\n        return tslib_1.__assign({}, stacktrace, { stack: stacktrace.stack.slice(popSize) });\n    }\n    catch (e) {\n        return stacktrace;\n    }\n}\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n    var message = ex && ex.message;\n    if (!message) {\n        return 'No error message';\n    }\n    if (message.error && typeof message.error.message === 'string') {\n        return message.error.message;\n    }\n    return message;\n}\n//# sourceMappingURL=tracekit.js.map","import { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\nimport { computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException, rejection) {\n    var event = {\n        exception: {\n            values: [\n                {\n                    type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n                    value: \"Non-Error \" + (rejection ? 'promise rejection' : 'exception') + \" captured with keys: \" + extractExceptionKeysForMessage(exception),\n                },\n            ],\n        },\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n    };\n    if (syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .map(function (frame) { return ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n    }); })\n        .slice(0, STACKTRACE_LIMIT)\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { addExceptionMechanism, addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isEvent, isPlainObject, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n/** JSDoc */\nexport function eventFromUnknownInput(exception, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event;\n    if (isErrorEvent(exception) && exception.error) {\n        // If it is an ErrorEvent with `error` property, extract it to get actual Error\n        var errorEvent = exception;\n        exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isDOMError(exception) || isDOMException(exception)) {\n        // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n        // then we just extract the name and message, as they don't provide anything else\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n        var domException = exception;\n        var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n        var message = domException.message ? name_1 + \": \" + domException.message : name_1;\n        event = eventFromString(message, syntheticException, options);\n        addExceptionTypeValue(event, message);\n        return event;\n    }\n    if (isError(exception)) {\n        // we have a real Error object, do nothing\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isPlainObject(exception) || isEvent(exception)) {\n        // If it is plain Object or Event, serialize it manually and extract options\n        // This will allow us to group events based on top-level keys\n        // which is much better than creating new group when any key/value change\n        var objectException = exception;\n        event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n        addExceptionMechanism(event, {\n            synthetic: true,\n        });\n        return event;\n    }\n    // If none of previous checks were valid, then it means that it's not:\n    // - an instance of DOMError\n    // - an instance of DOMException\n    // - an instance of Event\n    // - an instance of Error\n    // - a valid ErrorEvent (one with an error property)\n    // - a plain Object\n    //\n    // So bail out and capture it as a simple message:\n    event = eventFromString(exception, syntheticException, options);\n    addExceptionTypeValue(event, \"\" + exception, undefined);\n    addExceptionMechanism(event, {\n        synthetic: true,\n    });\n    return event;\n}\n// this._options.attachStacktrace\n/** JSDoc */\nexport function eventFromString(input, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event = {\n        message: input,\n    };\n    if (options.attachStacktrace && syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n//# sourceMappingURL=eventbuilder.js.map","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry_original__ || this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, logger, parseRetryAfterHeader, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        var defaultOptions = {\n            body: JSON.stringify(event),\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        if (this.options.headers !== undefined) {\n            defaultOptions.headers = this.options.headers;\n        }\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            global\n                .fetch(_this.url, defaultOptions)\n                .then(function (response) {\n                var status = Status.fromHttpCode(response.status);\n                if (status === Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === Status.RateLimit) {\n                    var now = Date.now();\n                    _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, response.headers.get('Retry-After')));\n                    logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(response);\n            })\n                .catch(reject);\n        }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { logger, parseRetryAfterHeader, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                var status = Status.fromHttpCode(request.status);\n                if (status === Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === Status.RateLimit) {\n                    var now = Date.now();\n                    _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, request.getResponseHeader('Retry-After')));\n                    logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(request);\n            };\n            request.open('POST', _this.url);\n            for (var header in _this.options.headers) {\n                if (_this.options.headers.hasOwnProperty(header)) {\n                    request.setRequestHeader(header, _this.options.headers[header]);\n                }\n            }\n            request.send(JSON.stringify(event));\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, supportsFetch, SyncPromise } from '@sentry/utils';\nimport { eventFromString, eventFromUnknownInput } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = tslib_1.__assign({}, this._options.transportOptions, { dsn: this._options.dsn });\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromUnknownInput(exception, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        addExceptionMechanism(event, {\n            handled: true,\n            type: 'generic',\n        });\n        event.level = Severity.Error;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromString(message, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        event.level = level;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.15.4';\n//# sourceMappingURL=version.js.map","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n            return;\n        }\n        var dsn = options.dsn || this.getDsn();\n        if (!options.eventId) {\n            logger.error('Missing `eventId` option in showReportDialog call');\n            return;\n        }\n        if (!dsn) {\n            logger.error('Missing `Dsn` option in showReportDialog call');\n            return;\n        }\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = new API(dsn).getReportDialogEndpoint(options);\n        if (options.onLoad) {\n            script.onload = options.onLoad;\n        }\n        (document.head || document.body).appendChild(script);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isBlacklistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isWhitelistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            return ((event &&\n                event.exception &&\n                event.exception.values &&\n                event.exception.values[0] &&\n                event.exception.values[0].type === 'SentryError') ||\n                false);\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this._options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this._options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                var _a = (event.exception.values && event.exception.values[0]) || {}, _b = _a.type, type = _b === void 0 ? '' : _b, _c = _a.value, value = _c === void 0 ? '' : _c;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                var frames_1 = event.stacktrace.frames;\n                return (frames_1 && frames_1[frames_1.length - 1].filename) || null;\n            }\n            if (event.exception) {\n                var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n                return (frames_2 && frames_2[frames_2.length - 1].filename) || null;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","import * as tslib_1 from \"tslib\";\nimport { captureException, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue } from '@sentry/utils';\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    var sentryWrapped = function () {\n        var args = Array.prototype.slice.call(arguments);\n        // tslint:disable:no-unsafe-any\n        try {\n            // tslint:disable-next-line:strict-type-predicates\n            if (before && typeof before === 'function') {\n                before.apply(this, arguments);\n            }\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                // Attempt to invoke user-land function\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n                //       means the sentry.javascript SDK caught an error invoking your application code. This\n                //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means the sentry.javascript SDK caught an error invoking your application code. This\n            //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n            return fn.apply(this, wrappedArguments);\n            // tslint:enable:no-unsafe-any\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = tslib_1.__assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined);\n                        addExceptionMechanism(processedEvent, options.mechanism);\n                    }\n                    processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: args });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // tslint:disable-line:no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n        if (descriptor.configurable) {\n            Object.defineProperty(sentryWrapped, 'name', {\n                get: function () {\n                    return fn.name;\n                },\n            });\n        }\n    }\n    catch (_oO) {\n        /*no-empty*/\n    }\n    return sentryWrapped;\n}\n//# sourceMappingURL=helpers.js.map","import { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    function TryCatch() {\n        /** JSDoc */\n        this._ignoreOnError = 0;\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n    }\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapRAF = function (original) {\n        return function (callback) {\n            return original(wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        var global = getGlobalObject();\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    // tslint:disable-next-line:no-unbound-method strict-type-predicates\n                    if (typeof fn.handleEvent === 'function') {\n                        fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                            mechanism: {\n                                data: {\n                                    function: 'handleEvent',\n                                    handler: getFunctionName(fn),\n                                    target: target,\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        });\n                    }\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapXHR = function (originalSend) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var xhr = this; // tslint:disable-line:no-this-assignment\n            var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n            xmlHttpRequestProps.forEach(function (prop) {\n                if (prop in xhr && typeof xhr[prop] === 'function') {\n                    fill(xhr, prop, function (original) {\n                        var wrapOptions = {\n                            mechanism: {\n                                data: {\n                                    function: prop,\n                                    handler: getFunctionName(original),\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        };\n                        // If Instrument integration has been called before TryCatch, get the name of original function\n                        if (original.__sentry_original__) {\n                            wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n                        }\n                        // Otherwise wrap directly\n                        return wrap(original, wrapOptions);\n                    });\n                }\n            });\n            return originalSend.apply(this, args);\n        };\n    };\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        this._ignoreOnError = this._ignoreOnError;\n        var global = getGlobalObject();\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        if ('XMLHttpRequest' in global) {\n            fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n        }\n        [\n            'EventTarget',\n            'Window',\n            'Node',\n            'ApplicationCache',\n            'AudioTrackList',\n            'ChannelMergerNode',\n            'CryptoOperation',\n            'EventSource',\n            'FileReader',\n            'HTMLUnknownElement',\n            'IDBDatabase',\n            'IDBRequest',\n            'IDBTransaction',\n            'KeyOperation',\n            'MediaController',\n            'MessagePort',\n            'ModalWindow',\n            'Notification',\n            'SVGElementInstance',\n            'Screen',\n            'TextTrack',\n            'TextTrackCue',\n            'TextTrackList',\n            'WebSocket',\n            'WebSocketWorker',\n            'Worker',\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'XMLHttpRequestUpload',\n        ].forEach(this._wrapEventTarget.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map","import * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addInstrumentationHandler, getEventDescription, getGlobalObject, htmlTreeAsString, logger, parseUrl, safeJoin, } from '@sentry/utils';\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /**\n     * Creates breadcrumbs from console API calls\n     */\n    Breadcrumbs.prototype._consoleBreadcrumb = function (handlerData) {\n        var breadcrumb = {\n            category: 'console',\n            data: {\n                arguments: handlerData.args,\n                logger: 'console',\n            },\n            level: Severity.fromString(handlerData.level),\n            message: safeJoin(handlerData.args, ' '),\n        };\n        if (handlerData.level === 'assert') {\n            if (handlerData.args[0] === false) {\n                breadcrumb.message = \"Assertion failed: \" + (safeJoin(handlerData.args.slice(1), ' ') || 'console.assert');\n                breadcrumb.data.arguments = handlerData.args.slice(1);\n            }\n            else {\n                // Don't capture a breadcrumb for passed assertions\n                return;\n            }\n        }\n        getCurrentHub().addBreadcrumb(breadcrumb, {\n            input: handlerData.args,\n            level: handlerData.level,\n        });\n    };\n    /**\n     * Creates breadcrumbs from DOM API calls\n     */\n    Breadcrumbs.prototype._domBreadcrumb = function (handlerData) {\n        var target;\n        // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n        try {\n            target = handlerData.event.target\n                ? htmlTreeAsString(handlerData.event.target)\n                : htmlTreeAsString(handlerData.event);\n        }\n        catch (e) {\n            target = '<unknown>';\n        }\n        if (target.length === 0) {\n            return;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: \"ui.\" + handlerData.name,\n            message: target,\n        }, {\n            event: handlerData.event,\n            name: handlerData.name,\n        });\n    };\n    /**\n     * Creates breadcrumbs from XHR API calls\n     */\n    Breadcrumbs.prototype._xhrBreadcrumb = function (handlerData) {\n        if (handlerData.endTimestamp) {\n            // We only capture complete, non-sentry requests\n            if (handlerData.xhr.__sentry_own_request__) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: 'xhr',\n                data: handlerData.xhr.__sentry_xhr__,\n                type: 'http',\n            }, {\n                xhr: handlerData.xhr,\n            });\n            return;\n        }\n        // We only capture issued sentry requests\n        if (this._options.sentry && handlerData.xhr.__sentry_own_request__) {\n            addSentryBreadcrumb(handlerData.args[0]);\n        }\n    };\n    /**\n     * Creates breadcrumbs from fetch API calls\n     */\n    Breadcrumbs.prototype._fetchBreadcrumb = function (handlerData) {\n        // We only capture complete fetch requests\n        if (!handlerData.endTimestamp) {\n            return;\n        }\n        var client = getCurrentHub().getClient();\n        var dsn = client && client.getDsn();\n        if (this._options.sentry && dsn) {\n            var filterUrl = new API(dsn).getStoreEndpoint();\n            // if Sentry key appears in URL, don't capture it as a request\n            // but rather as our own 'sentry' type breadcrumb\n            if (filterUrl &&\n                handlerData.fetchData.url.indexOf(filterUrl) !== -1 &&\n                handlerData.fetchData.method === 'POST' &&\n                handlerData.args[1] &&\n                handlerData.args[1].body) {\n                addSentryBreadcrumb(handlerData.args[1].body);\n                return;\n            }\n        }\n        if (handlerData.error) {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: tslib_1.__assign({}, handlerData.fetchData, { status_code: handlerData.response.status }),\n                level: Severity.Error,\n                type: 'http',\n            }, {\n                data: handlerData.error,\n                input: handlerData.args,\n            });\n        }\n        else {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: tslib_1.__assign({}, handlerData.fetchData, { status_code: handlerData.response.status }),\n                type: 'http',\n            }, {\n                input: handlerData.args,\n                response: handlerData.response,\n            });\n        }\n    };\n    /**\n     * Creates breadcrumbs from history API calls\n     */\n    Breadcrumbs.prototype._historyBreadcrumb = function (handlerData) {\n        var global = getGlobalObject();\n        var from = handlerData.from;\n        var to = handlerData.to;\n        var parsedLoc = parseUrl(global.location.href);\n        var parsedFrom = parseUrl(from);\n        var parsedTo = parseUrl(to);\n        // Initial pushState doesn't provide `from` information\n        if (!parsedFrom.path) {\n            parsedFrom = parsedLoc;\n        }\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n            // tslint:disable-next-line:no-parameter-reassignment\n            to = parsedTo.relative;\n        }\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n            // tslint:disable-next-line:no-parameter-reassignment\n            from = parsedFrom.relative;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: 'navigation',\n            data: {\n                from: from,\n                to: to,\n            },\n        });\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        var _this = this;\n        if (this._options.console) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._consoleBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'console',\n            });\n        }\n        if (this._options.dom) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._domBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'dom',\n            });\n        }\n        if (this._options.xhr) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._xhrBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'xhr',\n            });\n        }\n        if (this._options.fetch) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._fetchBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'fetch',\n            });\n        }\n        if (this._options.history) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._historyBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'history',\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n/**\n * Create a breadcrumb of `sentry` from the events themselves\n */\nfunction addSentryBreadcrumb(serializedData) {\n    // There's always something that can go wrong with deserialization...\n    try {\n        var event_1 = JSON.parse(serializedData);\n        getCurrentHub().addBreadcrumb({\n            category: \"sentry.\" + (event_1.type === 'transaction' ? 'transaction' : 'event'),\n            event_id: event_1.event_id,\n            level: event_1.level || Severity.fromString('error'),\n            message: getEventDescription(event_1),\n        }, {\n            event: event_1,\n        });\n    }\n    catch (_oO) {\n        logger.error('Error while adding sentry type breadcrumb');\n    }\n}\n//# sourceMappingURL=breadcrumbs.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, addInstrumentationHandler, getLocationHref, isErrorEvent, isPrimitive, isString, logger, } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        /** JSDoc */\n        this._onErrorHandlerInstalled = false;\n        /** JSDoc */\n        this._onUnhandledRejectionHandlerInstalled = false;\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            this._installGlobalOnErrorHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            this._installGlobalOnUnhandledRejectionHandler();\n        }\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {\n        var _this = this;\n        if (this._onErrorHandlerInstalled) {\n            return;\n        }\n        addInstrumentationHandler({\n            callback: function (data) {\n                var error = data.error;\n                var currentHub = getCurrentHub();\n                var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n                var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n                if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                    return;\n                }\n                var client = currentHub.getClient();\n                var event = isPrimitive(error)\n                    ? _this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column)\n                    : _this._enhanceEventWithInitialFrame(eventFromUnknownInput(error, undefined, {\n                        attachStacktrace: client && client.getOptions().attachStacktrace,\n                        rejection: false,\n                    }), data.url, data.line, data.column);\n                addExceptionMechanism(event, {\n                    handled: false,\n                    type: 'onerror',\n                });\n                currentHub.captureEvent(event, {\n                    originalException: error,\n                });\n            },\n            type: 'error',\n        });\n        this._onErrorHandlerInstalled = true;\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {\n        var _this = this;\n        if (this._onUnhandledRejectionHandlerInstalled) {\n            return;\n        }\n        addInstrumentationHandler({\n            callback: function (e) {\n                var error = e;\n                // dig the object of the rejection out of known event types\n                try {\n                    // PromiseRejectionEvents store the object of the rejection under 'reason'\n                    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n                    if ('reason' in e) {\n                        error = e.reason;\n                    }\n                    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n                    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n                    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n                    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n                    // https://github.com/getsentry/sentry-javascript/issues/2380\n                    else if ('detail' in e && 'reason' in e.detail) {\n                        error = e.detail.reason;\n                    }\n                }\n                catch (_oO) {\n                    // no-empty\n                }\n                var currentHub = getCurrentHub();\n                var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n                var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n                if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                    return true;\n                }\n                var client = currentHub.getClient();\n                var event = isPrimitive(error)\n                    ? _this._eventFromIncompleteRejection(error)\n                    : eventFromUnknownInput(error, undefined, {\n                        attachStacktrace: client && client.getOptions().attachStacktrace,\n                        rejection: true,\n                    });\n                event.level = Severity.Error;\n                addExceptionMechanism(event, {\n                    handled: false,\n                    type: 'onunhandledrejection',\n                });\n                currentHub.captureEvent(event, {\n                    originalException: error,\n                });\n                return;\n            },\n            type: 'unhandledrejection',\n        });\n        this._onUnhandledRejectionHandlerInstalled = true;\n    };\n    /**\n     * This function creates a stack from an old, error-less onerror handler.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {\n        var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n        // If 'message' is ErrorEvent, get real message from inside\n        var message = isErrorEvent(msg) ? msg.message : msg;\n        var name;\n        if (isString(message)) {\n            var groups = message.match(ERROR_TYPES_RE);\n            if (groups) {\n                name = groups[1];\n                message = groups[2];\n            }\n        }\n        var event = {\n            exception: {\n                values: [\n                    {\n                        type: name || 'Error',\n                        value: message,\n                    },\n                ],\n            },\n        };\n        return this._enhanceEventWithInitialFrame(event, url, line, column);\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteRejection = function (error) {\n        return {\n            exception: {\n                values: [\n                    {\n                        type: 'UnhandledRejection',\n                        value: \"Non-Error promise rejection captured with value: \" + error,\n                    },\n                ],\n            },\n        };\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {\n        event.exception = event.exception || {};\n        event.exception.values = event.exception.values || [];\n        event.exception.values[0] = event.exception.values[0] || {};\n        event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n        var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n        var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n        var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n        if (event.exception.values[0].stacktrace.frames.length === 0) {\n            event.exception.values[0].stacktrace.frames.push({\n                colno: colno,\n                filename: filename,\n                function: '?',\n                in_app: true,\n                lineno: lineno,\n            });\n        }\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                // Request Interface: https://docs.sentry.io/development/sdk-dev/event-payloads/request/\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return tslib_1.__assign({}, event, { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    if (options.release === undefined) {\n        var window_1 = getGlobalObject();\n        // This supports the variable that sentry-webpack-plugin injects\n        if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n            options.release = window_1.SENTRY_RELEASE.id;\n        }\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nexport function wrap(fn) {\n    return internalWrap(fn)(); // tslint:disable-line:no-unsafe-any\n}\n//# sourceMappingURL=sdk.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    var hub = getCurrentHub();\n    var client = new clientClass(options);\n    hub.bindClient(client);\n}\n//# sourceMappingURL=sdk.js.map","import * as tslib_1 from \"tslib\";\nexport * from './exports';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\nvar windowIntegrations = {};\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nvar _window = getGlobalObject();\nif (_window.Sentry && _window.Sentry.Integrations) {\n    windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\nvar INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);\nexport { INTEGRATIONS as Integrations, Transports };\n//# sourceMappingURL=index.js.map","import * as tslib_1 from \"tslib\";\nimport { consoleSandbox, getGlobalObject, isNodeEnv, logger, timestampWithMs, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [];\n        this._stack.push({ client: client, scope: scope });\n    }\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n        if (client && client.setupIntegrations) {\n            client.setupIntegrations();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimick the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error('Sentry syntheticException');\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: exception,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureException', exception, tslib_1.__assign({}, finalHint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimick the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error(message);\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: message,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureMessage', message, level, tslib_1.__assign({}, finalHint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureEvent', event, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var top = this.getStackTop();\n        if (!top.scope || !top.client) {\n            return;\n        }\n        var _a = (top.client.getOptions && top.client.getOptions()) || {}, _b = _a.beforeBreadcrumb, beforeBreadcrumb = _b === void 0 ? null : _b, _c = _a.maxBreadcrumbs, maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = timestampWithMs();\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setUser = function (user) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setUser(user);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTags = function (tags) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTags(tags);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtras = function (extras) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtras(extras);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTag = function (key, value) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTag(key, value);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtra = function (key, extra) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtra(key, extra);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setContext = function (name, context) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setContext(name, context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            callback(top.scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client) {\n            return null;\n        }\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSpan = function (spanOrSpanContext, forceNoChild) {\n        if (forceNoChild === void 0) { forceNoChild = false; }\n        return this._callExtensionMethod('startSpan', spanOrSpanContext, forceNoChild);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        return this._callExtensionMethod('traceHeaders');\n    };\n    /**\n     * Calls global extension method and binding current instance to the function call\n     */\n    // @ts-ignore\n    Hub.prototype._callExtensionMethod = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var carrier = getMainCarrier();\n        var sentry = carrier.__SENTRY__;\n        // tslint:disable-next-line: strict-type-predicates\n        if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n            return sentry.extensions[method].apply(this, args);\n        }\n        logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n    };\n    return Hub;\n}());\nexport { Hub };\n/** Returns the global shim registry. */\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        extensions: {},\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there (applicable only to Node environment)\n    if (isNodeEnv()) {\n        return getHubFromActiveDomain(registry);\n    }\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n}\n/**\n * Try to read the hub from an active domain, fallback to the registry if one doesnt exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n    try {\n        var property = 'domain';\n        var carrier = getMainCarrier();\n        var sentry = carrier.__SENTRY__;\n        // tslint:disable-next-line: strict-type-predicates\n        if (!sentry || !sentry.extensions || !sentry.extensions[property]) {\n            return getHubFromCarrier(registry);\n        }\n        var domain = sentry.extensions[property];\n        var activeDomain = domain.active;\n        // If there no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or its an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map"],"sourceRoot":""}